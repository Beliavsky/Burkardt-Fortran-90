08 June 2020   3:42:41.270 PM
 
C8LIB_TEST
  FORTRAN90 version
  Test C8LIB.
 
C8_ABS_TEST
  C8_ABS computes the absolute value of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_ABS(C1)             R3=ABS(C1)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667      0.467352                  0.467352
     -0.843197   -0.344280      0.910774                  0.910774
      0.589627    0.260090      0.644443                  0.644443
      0.391140    0.323400      0.507521                  0.507521
     -0.139466   -0.156136      0.209354                  0.209354
     -0.236066    0.077459      0.248450                  0.248450
      0.018599   -0.633214      0.633487                  0.633487
      0.892850    0.010314      0.892909                  0.892909
     -0.560465    0.763795      0.947367                  0.947367
      0.306357    0.026275      0.307481                  0.307481
 
C8_ACOS_TEST
  C8_ACOS computes the inverse cosine.
 
       C1=C8_UNIFORM_01          C2 = C8_ACOS(C1)           C3 = C8_COS(C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667      1.109149    0.141009      0.449860   -0.126667
     -0.843197   -0.344280      2.416418    0.498201     -0.843197   -0.344280
      0.589627    0.260090      0.973443   -0.309595      0.589627    0.260090
      0.391140    0.323400      1.192424   -0.341349      0.391140    0.323400
     -0.139466   -0.156136      1.709000    0.156993     -0.139466   -0.156136
     -0.236066    0.077459      1.808344   -0.079613     -0.236066    0.077459
      0.018599   -0.633214      1.555082    0.597163      0.018599   -0.633214
      0.892850    0.010314      0.467681   -0.022876      0.892850    0.010314
     -0.560465    0.763795      2.013147   -0.767531     -0.560465    0.763795
      0.306357    0.026275      1.259556   -0.027598      0.306357    0.026275
 
C8_ACOSH_TEST
  C8_ACOSH computes the inverse hyperbolic cosine.
 
       C1=C8_UNIFORM_01          C2 = C8_ACOSH(C1)           C3 = COSH(C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667     -0.141009    1.109149      0.449860   -0.126667
     -0.843197   -0.344280     -0.498201    2.416418     -0.843197   -0.344280
      0.589627    0.260090      0.309595    0.973443      0.589627    0.260090
      0.391140    0.323400      0.341349    1.192424      0.391140    0.323400
     -0.139466   -0.156136     -0.156993    1.709000     -0.139466   -0.156136
     -0.236066    0.077459      0.079613    1.808344     -0.236066    0.077459
      0.018599   -0.633214     -0.597163    1.555082      0.018599   -0.633214
      0.892850    0.010314      0.022876    0.467681      0.892850    0.010314
     -0.560465    0.763795      0.767531    2.013147     -0.560465    0.763795
      0.306357    0.026275      0.027598    1.259556      0.306357    0.026275
 
C8_ADD_TEST
  C8_ADD adds two C8s
 
       C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3 = C8_ADD(C1,C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667     -0.843197   -0.344280     -0.393337   -0.470947
      0.589627    0.260090      0.391140    0.323400      0.980767    0.583490
     -0.139466   -0.156136     -0.236066    0.077459     -0.375532   -0.078676
      0.018599   -0.633214      0.892850    0.010314      0.911449   -0.622901
     -0.560465    0.763795      0.306357    0.026275     -0.254108    0.790070
      0.500804   -0.779931      0.350471    0.016555      0.851275   -0.763376
      0.434989   -0.266623     -0.200947    0.270711      0.234042    0.004088
     -0.097460    0.901881     -0.770245   -0.314307     -0.867705    0.587573
     -0.889181    0.265655     -0.779871   -0.551160     -1.669053   -0.285505
      0.031360   -0.433556      0.249089    0.578743      0.280450    0.145186
 
C8_ARG_TEST
  C8_ARG computes the argument of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_ARG(C1)
     ---------------------     ---------------------
 
        0.4499     -0.1267        6.0087
       -0.8432     -0.3443        3.5292
        0.5896      0.2601        0.4154
        0.3911      0.3234        0.6909
       -0.1395     -0.1561        3.9833
       -0.2361      0.0775        2.8245
        0.0186     -0.6332        4.7418
        0.8928      0.0103        0.0116
       -0.5605      0.7638        2.2038
        0.3064      0.0263        0.0856
 
C8_ASIN_TEST
  C8_ASIN computes the inverse sine.
 
       C1=C8_UNIFORM_01          C2 = C8_ASIN(C1)          C3 = C8_SIN(C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667      0.461648   -0.141009      0.449860   -0.126667
     -0.843197   -0.344280     -0.845622   -0.498201     -0.843197   -0.344280
      0.589627    0.260090      0.597353    0.309595      0.589627    0.260090
      0.391140    0.323400      0.378372    0.341349      0.391140    0.323400
     -0.139466   -0.156136     -0.138204   -0.156993     -0.139466   -0.156136
     -0.236066    0.077459     -0.237548    0.079613     -0.236066    0.077459
      0.018599   -0.633214      0.015714   -0.597163      0.018599   -0.633214
      0.892850    0.010314      1.103115    0.022876      0.892850    0.010314
     -0.560465    0.763795     -0.442351    0.767531     -0.560465    0.763795
      0.306357    0.026275      0.311241    0.027598      0.306357    0.026275
 
C8_ASINH_TEST
  C8_ASINH computes the inverse hyperbolic sine.
 
       C1=C8_UNIFORM_01          C2 = C8_ASINH(C1)         C3 = C8_SINH(C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667      0.438679   -0.115643      0.449860   -0.126667
     -0.843197   -0.344280     -0.788715   -0.262344     -0.843197   -0.344280
      0.589627    0.260090      0.572932    0.224433      0.589627    0.260090
      0.391140    0.323400      0.399232    0.303890      0.391140    0.323400
     -0.139466   -0.156136     -0.140698   -0.155225     -0.139466   -0.156136
     -0.236066    0.077459     -0.234582    0.075447     -0.236066    0.077459
      0.018599   -0.633214      0.024024   -0.685463      0.018599   -0.633214
      0.892850    0.010314      0.803562    0.007693      0.892850    0.010314
     -0.560465    0.763795     -0.665100    0.670334     -0.560465    0.763795
      0.306357    0.026275      0.301849    0.025125      0.306357    0.026275
 
C8_ATAN_TEST
  C8_ATAN computes the inverse tangent.
 
       C1=C8_UNIFORM_01          C2 = C8_ATAN(C1)          C3 = C8_TAN(C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667      0.427774   -0.105499      0.449860   -0.126667
     -0.843197   -0.344280     -0.735020   -0.197908     -0.843197   -0.344280
      0.589627    0.260090      0.555251    0.192787      0.589627    0.260090
      0.391140    0.323400      0.405767    0.284294      0.391140    0.323400
     -0.139466   -0.156136     -0.141920   -0.154298     -0.139466   -0.156136
     -0.236066    0.077459     -0.233099    0.073480     -0.236066    0.077459
      0.018599   -0.633214      0.031027   -0.746154      0.018599   -0.633214
      0.892850    0.010314      0.728880    0.005739      0.892850    0.010314
     -0.560465    0.763795     -0.739806    0.556404     -0.560465    0.763795
      0.306357    0.026275      0.297455    0.024024      0.306357    0.026275
 
C8_ATANH_TEST
  C8_ATANH computes the inverse hyperbolic tangent.
 
       C1=C8_UNIFORM_01          C2 = C8_ATANH(C1)         C3 = C8_TANH(C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667      0.473511   -0.156723      0.449860   -0.126667
     -0.843197   -0.344280     -0.800349   -0.664037     -0.843197   -0.344280
      0.589627    0.260090      0.599279    0.363538      0.589627    0.260090
      0.391140    0.323400      0.364173    0.358338      0.391140    0.323400
     -0.139466   -0.156136     -0.136934   -0.157832     -0.139466   -0.156136
     -0.236066    0.077459     -0.239027    0.081817     -0.236066    0.077459
      0.018599   -0.633214      0.013276   -0.564596      0.018599   -0.633214
      0.892850    0.010314      1.433505    0.050703      0.892850    0.010314
     -0.560465    0.763795     -0.339400    0.751900     -0.560465    0.763795
      0.306357    0.026275      0.316262    0.028986      0.306357    0.026275
 
C8_CONJ_TEST
  C8_CONJ computes the conjugate of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_CONJ(C1)            C3=C8_CONJ(C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.4499      0.1267        0.4499     -0.1267
       -0.8432     -0.3443       -0.8432      0.3443       -0.8432     -0.3443
        0.5896      0.2601        0.5896     -0.2601        0.5896      0.2601
        0.3911      0.3234        0.3911     -0.3234        0.3911      0.3234
       -0.1395     -0.1561       -0.1395      0.1561       -0.1395     -0.1561
       -0.2361      0.0775       -0.2361     -0.0775       -0.2361      0.0775
        0.0186     -0.6332        0.0186      0.6332        0.0186     -0.6332
        0.8928      0.0103        0.8928     -0.0103        0.8928      0.0103
       -0.5605      0.7638       -0.5605     -0.7638       -0.5605      0.7638
        0.3064      0.0263        0.3064     -0.0263        0.3064      0.0263
 
C8_COS_TEST
  C8_COS computes the cosine of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_COS(C1)             C3=C8_ACOS(C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.9077      0.0552        0.4499     -0.1267
       -0.8432     -0.3443        0.7049     -0.2622        0.8432      0.3443
        0.5896      0.2601        0.8594     -0.1463        0.5896      0.2601
        0.3911      0.3234        0.9732     -0.1255        0.3911      0.3234
       -0.1395     -0.1561        1.0024     -0.0218        0.1395      0.1561
       -0.2361      0.0775        0.9752      0.0181        0.2361     -0.0775
        0.0186     -0.6332        1.2071      0.0126        0.0186     -0.6332
        0.8928      0.0103        0.6272     -0.0080        0.8928      0.0103
       -0.5605      0.7638        1.1063      0.4467        0.5605     -0.7638
        0.3064      0.0263        0.9538     -0.0079        0.3064      0.0263
 
C8_COSH_TEST
  C8_COSH computes the hyperbolic cosine of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_COSH(C1)          C3=C8_COSH(C2) 
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        1.0941     -0.0588       -0.4499      0.1267
       -0.8432     -0.3443        1.2963      0.3195        0.8432      0.3443
        0.5896      0.2601        1.1393      0.1606        0.5896      0.2601
        0.3911      0.3234        1.0216      0.1275        0.3911      0.3234
       -0.1395     -0.1561        0.9975      0.0218        0.1395      0.1561
       -0.2361      0.0775        1.0249     -0.0184       -0.2361      0.0775
        0.0186     -0.6332        0.8063     -0.0110       -0.0186      0.6332
        0.8928      0.0103        1.4257      0.0105        0.8928      0.0103
       -0.5605      0.7638        0.8386     -0.4083       -0.5605      0.7638
        0.3064      0.0263        1.0469      0.0082        0.3064      0.0263
 
C8_CUBE_ROOT_TEST
  C8_CUBE_ROOT computes the principal cube root of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_CUBE_ROOT(C1)       C3=C2*C2*C2
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.3250      0.7047        0.4499     -0.1267
       -0.8432     -0.3443        0.3725      0.8949       -0.8432     -0.3443
        0.5896      0.2601        0.8555      0.1192        0.5896      0.2601
        0.3911      0.3234        0.7766      0.1821        0.3911      0.3234
       -0.1395     -0.1561        0.1429      0.5763       -0.1395     -0.1561
       -0.2361      0.0775        0.3700      0.5082       -0.2361      0.0775
        0.0186     -0.6332       -0.0084      0.8588        0.0186     -0.6332
        0.8928      0.0103        0.9629      0.0037        0.8928      0.0103
       -0.5605      0.7638        0.7288      0.6583       -0.5605      0.7638
        0.3064      0.0263        0.6747      0.0192        0.3064      0.0263
 
        C1=C8_UNIFORM_01          C2=C1**(1.0/3.0)          C3=C2*C2*C2
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.7728     -0.0709        0.4499     -0.1267
       -0.8432     -0.3443        0.5888     -0.7700       -0.8432     -0.3443
        0.5896      0.2601        0.8555      0.1192        0.5896      0.2601
        0.3911      0.3234        0.7766      0.1821        0.3911      0.3234
       -0.1395     -0.1561        0.4277     -0.4119       -0.1395     -0.1561
       -0.2361      0.0775        0.3700      0.5082       -0.2361      0.0775
        0.0186     -0.6332        0.7479     -0.4221        0.0186     -0.6332
        0.8928      0.0103        0.9629      0.0037        0.8928      0.0103
       -0.5605      0.7638        0.7288      0.6583       -0.5605      0.7638
        0.3064      0.0263        0.6747      0.0192        0.3064      0.0263
 
C8_DIV_TEST
  C8_DIV computes C3 = C1 / C2.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3=C8_DIV(C1,C2)              C4=C1/C2
     ---------------------     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.8432     -0.3443       -0.4047      0.3155       -0.4047      0.3155
        0.5896      0.2601        0.3911      0.3234        1.2219     -0.3453        1.2219     -0.3453
       -0.1395     -0.1561       -0.2361      0.0775        0.3374      0.7721        0.3374      0.7721
        0.0186     -0.6332        0.8928      0.0103        0.0126     -0.7094        0.0126     -0.7094
       -0.5605      0.7638        0.3064      0.0263       -1.6038      2.6307       -1.6038      2.6307
        0.5008     -0.7799        0.3505      0.0166        1.3209     -2.2878        1.3209     -2.2878
        0.4350     -0.2666       -0.2009      0.2707       -1.4040     -0.5646       -1.4040     -0.5646
       -0.0975      0.9019       -0.7702     -0.3143       -0.3011     -1.0480       -0.3011     -1.0480
       -0.8892      0.2657       -0.7799     -0.5512        0.5998     -0.7646        0.5998     -0.7646
        0.0314     -0.4336        0.2491      0.5787       -0.6124     -0.3178       -0.6124     -0.3178
 
C8_DIV_R8_TEST
  C8_DIV_R8 computes C3 = C1 / R2.
 
        C1=C8_UNIFORM_01          R2=R8_UNIFORM_01          C3=C8_DIV(C1,C2)              C4=C1/C2
     ---------------------     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.8295                    0.5423     -0.1527        0.5423     -0.1527
       -0.6458      0.3803        0.0661                   -9.7677      5.7512       -9.7677      5.7512
        0.3911      0.3234        0.0438                    8.9242      7.3787        8.9242      7.3787
        0.7371      0.3011        0.4495                    1.6396      0.6699        1.6396      0.6699
        0.0186     -0.6332        0.7973                    0.0233     -0.7942        0.0233     -0.7942
        0.0343     -0.0257        0.3508                    0.0978     -0.0734        0.0978     -0.0734
        0.3064      0.0263        0.8591                    0.3566      0.0306        0.3566      0.0306
        0.6561      0.6406        0.0075                   87.3333     85.2768       87.3333     85.2768
        0.4350     -0.2666        0.1137                    3.8270     -2.3457        3.8270     -2.3457
        0.2622     -0.5319        0.2671                    0.9814     -1.9911        0.9814     -1.9911
 
C8_EXP_TEST
  C8_EXP computes exp ( Z ).
 
        C1=C8_UNIFORM_01          C2=C8_EXP(C1)             C3=C8_LOG(C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        1.5555     -0.1981        0.4499      6.1565
       -0.8432     -0.3443        0.4051     -0.1452       -0.8432      5.9389
        0.5896      0.2601        1.7427      0.4638        0.5896      0.2601
        0.3911      0.3234        1.4020      0.4699        0.3911      0.3234
       -0.1395     -0.1561        0.8592     -0.1353       -0.1395      6.1270
       -0.2361      0.0775        0.7874      0.0611       -0.2361      0.0775
        0.0186     -0.6332        0.8213     -0.6028        0.0186      5.6500
        0.8928      0.0103        2.4419      0.0252        0.8928      0.0103
       -0.5605      0.7638        0.4123      0.3949       -0.5605      0.7638
        0.3064      0.0263        1.3580      0.0357        0.3064      0.0263
 
C8_IMAG_TEST
  C8_IMAG computes the imaginary part of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_IMAG(C1)             R3=IMAG(C1)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667     -0.126667                 -0.126667
     -0.843197   -0.344280     -0.344280                 -0.344280
      0.589627    0.260090      0.260090                  0.260090
      0.391140    0.323400      0.323400                  0.323400
     -0.139466   -0.156136     -0.156136                 -0.156136
     -0.236066    0.077459      0.077459                  0.077459
      0.018599   -0.633214     -0.633214                 -0.633214
      0.892850    0.010314      0.010314                  0.010314
     -0.560465    0.763795      0.763795                  0.763795
      0.306357    0.026275      0.026275                  0.026275
 
C8_I_TEST
  C8_I returns the imaginary unit.

  C1 = C8_I ( ) =  (   0.00000    ,   1.00000    )
  C2 = C1 * C1 =  (  -1.00000    ,   0.00000    )
 
C8_INV_TEST
  C8_INV computes C2 = 1 / C1.
 
        C1=C8_UNIFORM_01          C2=C8_INV(C1)             C3=C8_INV(C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        2.0596      0.5799        0.4499     -0.1267
       -0.8432     -0.3443       -1.0165      0.4150       -0.8432     -0.3443
        0.5896      0.2601        1.4197     -0.6263        0.5896      0.2601
        0.3911      0.3234        1.5185     -1.2555        0.3911      0.3234
       -0.1395     -0.1561       -3.1820      3.5624       -0.1395     -0.1561
       -0.2361      0.0775       -3.8243     -1.2549       -0.2361      0.0775
        0.0186     -0.6332        0.0463      1.5779        0.0186     -0.6332
        0.8928      0.0103        1.1199     -0.0129        0.8928      0.0103
       -0.5605      0.7638       -0.6245     -0.8510       -0.5605      0.7638
        0.3064      0.0263        3.2403     -0.2779        0.3064      0.0263
 
C8_LE_L1_TEST
  C8_LE_L1 evalues (C1 <= C2) using the L1 norm.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01         L3=C8_LE_L1(C1,C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.8432     -0.3443        T
        0.5896      0.2601        0.3911      0.3234        F
       -0.1395     -0.1561       -0.2361      0.0775        T
        0.0186     -0.6332        0.8928      0.0103        T
       -0.5605      0.7638        0.3064      0.0263        F
        0.5008     -0.7799        0.3505      0.0166        F
        0.4350     -0.2666       -0.2009      0.2707        F
       -0.0975      0.9019       -0.7702     -0.3143        T
       -0.8892      0.2657       -0.7799     -0.5512        T
        0.0314     -0.4336        0.2491      0.5787        T
 
C8_LE_L2_TEST
  C8_LE_L2 evalues (C1 <= C2) using the L2 norm.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01         L3=C8_LE_L2(C1,C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.8432     -0.3443        T
        0.5896      0.2601        0.3911      0.3234        F
       -0.1395     -0.1561       -0.2361      0.0775        T
        0.0186     -0.6332        0.8928      0.0103        T
       -0.5605      0.7638        0.3064      0.0263        F
        0.5008     -0.7799        0.3505      0.0166        F
        0.4350     -0.2666       -0.2009      0.2707        F
       -0.0975      0.9019       -0.7702     -0.3143        F
       -0.8892      0.2657       -0.7799     -0.5512        T
        0.0314     -0.4336        0.2491      0.5787        T
 
C8_LE_LI_TEST
  C8_LE_LI evalues (C1 <= C2) using the Loo norm.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01         L3=C8_LE_LI(C1,C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.8432     -0.3443        T
        0.5896      0.2601        0.3911      0.3234        F
       -0.1395     -0.1561       -0.2361      0.0775        T
        0.0186     -0.6332        0.8928      0.0103        T
       -0.5605      0.7638        0.3064      0.0263        F
        0.5008     -0.7799        0.3505      0.0166        F
        0.4350     -0.2666       -0.2009      0.2707        F
       -0.0975      0.9019       -0.7702     -0.3143        F
       -0.8892      0.2657       -0.7799     -0.5512        F
        0.0314     -0.4336        0.2491      0.5787        T
 
C8_LOG_TEST
  C8_LOG computes log ( Z ).
 
        C1=C8_UNIFORM_01          C2=C8_LOG(C1)             C3=C8_EXP(C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.7607      6.0087        0.4499     -0.1267
       -0.8432     -0.3443       -0.0935      3.5292       -0.8432     -0.3443
        0.5896      0.2601       -0.4394      0.4154        0.5896      0.2601
        0.3911      0.3234       -0.6782      0.6909        0.3911      0.3234
       -0.1395     -0.1561       -1.5637      3.9833       -0.1395     -0.1561
       -0.2361      0.0775       -1.3925      2.8245       -0.2361      0.0775
        0.0186     -0.6332       -0.4565      4.7418        0.0186     -0.6332
        0.8928      0.0103       -0.1133      0.0116        0.8928      0.0103
       -0.5605      0.7638       -0.0541      2.2038       -0.5605      0.7638
        0.3064      0.0263       -1.1793      0.0856        0.3064      0.0263
 
C8_MAG_TEST
  C8_MAG computes the magnitude of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_MAG(C1)
     ---------------------     ---------------------
 
        0.4499     -0.1267        0.4674
       -0.8432     -0.3443        0.9108
        0.5896      0.2601        0.6444
        0.3911      0.3234        0.5075
       -0.1395     -0.1561        0.2094
       -0.2361      0.0775        0.2484
        0.0186     -0.6332        0.6335
        0.8928      0.0103        0.8929
       -0.5605      0.7638        0.9474
        0.3064      0.0263        0.3075
 
C8_MUL_TEST
  C8_MUL computes C3 = C1 * C2.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3=C8_MUL(C1,C2)          C4=C1*C2
     ---------------------     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.8432     -0.3443       -0.4229     -0.0481       -0.4229     -0.0481
        0.5896      0.2601        0.3911      0.3234        0.1465      0.2924        0.1465      0.2924
       -0.1395     -0.1561       -0.2361      0.0775        0.0450      0.0261        0.0450      0.0261
        0.0186     -0.6332        0.8928      0.0103        0.0231     -0.5652        0.0231     -0.5652
       -0.5605      0.7638        0.3064      0.0263       -0.1918      0.2193       -0.1918      0.2193
        0.5008     -0.7799        0.3505      0.0166        0.1884     -0.2651        0.1884     -0.2651
        0.4350     -0.2666       -0.2009      0.2707       -0.0152      0.1713       -0.0152      0.1713
       -0.0975      0.9019       -0.7702     -0.3143        0.3585     -0.6640        0.3585     -0.6640
       -0.8892      0.2657       -0.7799     -0.5512        0.8399      0.2829        0.8399      0.2829
        0.0314     -0.4336        0.2491      0.5787        0.2587     -0.0898        0.2587     -0.0898
 
C8_NINT_TEST
  C8_NINT computes the nearest integer to a C8.
 
       C1=10*C8_UNIFORM_01      C2=C8_NINT(C1)
     ---------------------     ---------------------
 
      4.498596   -1.266674      4.000000   -1.000000
     -8.431966   -3.442800     -8.000000   -3.000000
      5.896271    2.600903      6.000000    3.000000
      3.911396    3.234000      4.000000    3.000000
     -1.394657   -1.561355     -1.000000   -2.000000
     -2.360663    0.774593     -2.000000    1.000000
      0.185993   -6.332143      0.000000   -6.000000
      8.928497    0.103136      9.000000    0.000000
     -5.604651    7.637951     -6.000000    8.000000
      3.063566    0.262752      3.000000    0.000000
 
C8_NORM_L1_TEST
  C8_NORM_L1 computes the L1 norm of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_NORM_L1(C1)
     ---------------------     ---------------------
 
      0.449860   -0.126667      0.576527
     -0.843197   -0.344280      1.187477
      0.589627    0.260090      0.849717
      0.391140    0.323400      0.714540
     -0.139466   -0.156136      0.295601
     -0.236066    0.077459      0.313526
      0.018599   -0.633214      0.651814
      0.892850    0.010314      0.903163
     -0.560465    0.763795      1.324260
      0.306357    0.026275      0.332632
 
C8_NORM_L2_TEST
  C8_NORM_L2 computes the L2 norm of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_NORM_L2(C1)
     ---------------------     ---------------------
 
      0.449860   -0.126667      0.467352
     -0.843197   -0.344280      0.910774
      0.589627    0.260090      0.644443
      0.391140    0.323400      0.507521
     -0.139466   -0.156136      0.209354
     -0.236066    0.077459      0.248450
      0.018599   -0.633214      0.633487
      0.892850    0.010314      0.892909
     -0.560465    0.763795      0.947367
      0.306357    0.026275      0.307481
 
C8_NORM_LI_TEST
  C8_NORM_LI computes the Loo norm of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_NORM_LI(C1)
     ---------------------     ---------------------
 
      0.449860   -0.126667      0.449860
     -0.843197   -0.344280      0.843197
      0.589627    0.260090      0.589627
      0.391140    0.323400      0.391140
     -0.139466   -0.156136      0.156136
     -0.236066    0.077459      0.236066
      0.018599   -0.633214      0.633214
      0.892850    0.010314      0.892850
     -0.560465    0.763795      0.763795
      0.306357    0.026275      0.306357
 
C8_NORMAL_01_TEST
  C8_NORMAL_01 generates unit pseudonormal C8s
 
       C1=C8_NORMAL_01(SEED)
     ---------------------
 
     1.67904     -0.472769    
   -0.566060     -0.231124    
     1.21293      0.535037    
     1.26938       1.04954    
    -1.66609      -1.86523    
    -2.24246      0.735809    
    0.396749E-01  -1.35074    
    0.673068      0.777484E-02
   -0.275127      0.374940    
     2.16400      0.185600    
    0.297785     -0.463758    
     2.04454      0.965770E-01
     1.39882     -0.857394    
    -1.24299       1.67452    
   -0.670837E-01  0.620783    
   -0.794396     -0.324163    
   -0.523768      0.156483    
   -0.350567     -0.247757    
    0.131700      -1.82076    
    0.537380       1.24857    
 
C8_ONE_TEST
  C8_ONE returns 1 as a C8.

  C1 = C8_ONE ( ) =  (   1.00000    ,   0.00000    )
  C2 = C1 + C1 =  (   2.00000    ,   0.00000    )
 
C8_PRINT_TEST
  C8_PRINT prints a C8.
 
  Zero:  (   0.00000    ,   0.00000    )
  One:  (   1.00000    ,   0.00000    )
  Pi:  (   3.14159    ,   0.00000    )
  i:  (   0.00000    ,   1.00000    )
  1+2i:  (   1.00000    ,   2.00000    )
 -12.34 + 56.78i:  (  -12.3400    ,   56.7800    )
  1E-3 + 2E-6i:  (  0.100000E-02,  0.200000E-05)
  3E8 - 4.5E9i:  (  0.300000E+09, -0.450000E+10)
 
C8_REAL_TEST
  C8_REAL computes the real part of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_REAL(C1)             R3=REAL(C1)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667      0.449860                  0.449860
     -0.843197   -0.344280     -0.843197                 -0.843197
      0.589627    0.260090      0.589627                  0.589627
      0.391140    0.323400      0.391140                  0.391140
     -0.139466   -0.156136     -0.139466                 -0.139466
     -0.236066    0.077459     -0.236066                 -0.236066
      0.018599   -0.633214      0.018599                  0.018599
      0.892850    0.010314      0.892850                  0.892850
     -0.560465    0.763795     -0.560465                 -0.560465
      0.306357    0.026275      0.306357                  0.306357
 
C8_SIN_TEST
  C8_SIN computes the sine of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_SIN(C1)             C3=C8_ASIN(C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.4383     -0.1144        0.4499     -0.1267
       -0.8432     -0.3443       -0.7915     -0.2335       -0.8432     -0.3443
        0.5896      0.2601        0.5750      0.2186        0.5896      0.2601
        0.3911      0.3234        0.4014      0.3042        0.3911      0.3234
       -0.1395     -0.1561       -0.1407     -0.1552       -0.1395     -0.1561
       -0.2361      0.0775       -0.2346      0.0754       -0.2361      0.0775
        0.0186     -0.6332        0.0225     -0.6763        0.0186     -0.6332
        0.8928      0.0103        0.7789      0.0065        0.8928      0.0103
       -0.5605      0.7638       -0.6943      0.7117       -0.5605      0.7638
        0.3064      0.0263        0.3017      0.0251        0.3064      0.0263
 
C8_SINH_TEST
  C8_SINH computes the hyperbolic sine of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_SINH(C1)          C3=C8_SINH(C2) 
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.4615     -0.1393        0.4499     -0.1267
       -0.8432     -0.3443       -0.8912     -0.4648       -0.8432     -0.3443
        0.5896      0.2601        0.6034      0.3032        0.5896      0.2601
        0.3911      0.3234        0.3804      0.3424        0.3911      0.3234
       -0.1395     -0.1561       -0.1382     -0.1570       -0.1395     -0.1561
       -0.2361      0.0775       -0.2376      0.0795       -0.2361      0.0775
        0.0186     -0.6332        0.0150     -0.5918        0.0186     -0.6332
        0.8928      0.0103        1.0162      0.0147        0.8928      0.0103
       -0.5605      0.7638       -0.4263      0.8032       -0.5605      0.7638
        0.3064      0.0263        0.3111      0.0275        0.3064      0.0263
 
C8_SQRT_TEST
  C8_SQRT computes the principal square root of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_SQRT(C1)            C3=C2*C2
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267       -0.6772      0.0935        0.4499     -0.1267
       -0.8432     -0.3443       -0.1838      0.9365       -0.8432     -0.3443
        0.5896      0.2601        0.7855      0.1656        0.5896      0.2601
        0.3911      0.3234        0.6703      0.2412        0.3911      0.3234
       -0.1395     -0.1561       -0.1869      0.4176       -0.1395     -0.1561
       -0.2361      0.0775        0.0787      0.4922       -0.2361      0.0775
        0.0186     -0.6332       -0.5710      0.5545        0.0186     -0.6332
        0.8928      0.0103        0.9449      0.0055        0.8928      0.0103
       -0.5605      0.7638        0.4398      0.8683       -0.5605      0.7638
        0.3064      0.0263        0.5540      0.0237        0.3064      0.0263
 
        C1=C8_UNIFORM_01          C2=SQRT(C1)               C3=C2*C2
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.6772     -0.0935        0.4499     -0.1267
       -0.8432     -0.3443        0.1838     -0.9365       -0.8432     -0.3443
        0.5896      0.2601        0.7855      0.1656        0.5896      0.2601
        0.3911      0.3234        0.6703      0.2412        0.3911      0.3234
       -0.1395     -0.1561        0.1869     -0.4176       -0.1395     -0.1561
       -0.2361      0.0775        0.0787      0.4922       -0.2361      0.0775
        0.0186     -0.6332        0.5710     -0.5545        0.0186     -0.6332
        0.8928      0.0103        0.9449      0.0055        0.8928      0.0103
       -0.5605      0.7638        0.4398      0.8683       -0.5605      0.7638
        0.3064      0.0263        0.5540      0.0237        0.3064      0.0263
 
C8_SUB_TEST
  C8_SUB subtracts two C8s
 
       C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3 = C8_SUB(C1,C2)
     ---------------------     ---------------------     ---------------------
 
      0.449860   -0.126667     -0.843197   -0.344280      1.293056    0.217613
      0.589627    0.260090      0.391140    0.323400      0.198487   -0.063310
     -0.139466   -0.156136     -0.236066    0.077459      0.096601   -0.233595
      0.018599   -0.633214      0.892850    0.010314     -0.874250   -0.643528
     -0.560465    0.763795      0.306357    0.026275     -0.866822    0.737520
      0.500804   -0.779931      0.350471    0.016555      0.150333   -0.796486
      0.434989   -0.266623     -0.200947    0.270711      0.635936   -0.537333
     -0.097460    0.901881     -0.770245   -0.314307      0.672785    1.216188
     -0.889181    0.265655     -0.779871   -0.551160     -0.109310    0.816815
      0.031360   -0.433556      0.249089    0.578743     -0.217729   -1.012299
 
C8_TAN_TEST
  C8_TAN computes the tangent of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_TAN(C1)             C3=C8_ATAN(C2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.4735     -0.1548        0.4499     -0.1267
       -0.8432     -0.3443       -0.8781     -0.6579       -0.8432     -0.3443
        0.5896      0.2601        0.6081      0.3579        0.5896      0.2601
        0.3911      0.3234        0.3660      0.3598        0.3911      0.3234
       -0.1395     -0.1561       -0.1369     -0.1579       -0.1395     -0.1561
       -0.2361      0.0775       -0.2390      0.0817       -0.2361      0.0775
        0.0186     -0.6332        0.0128     -0.5604        0.0186     -0.6332
        0.8928      0.0103        1.2415      0.0262        0.8928      0.0103
       -0.5605      0.7638       -0.3163      0.7710       -0.5605      0.7638
        0.3064      0.0263        0.3161      0.0289        0.3064      0.0263
 
C8_TANH_TEST
  C8_TANH computes the tangent of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_TANH(C1)           C3=C8_ATANH(C2)
     ---------------------     ---------------------    ---------------------
 
        0.4499     -0.1267        0.4274     -0.1044        0.4499     -0.1267
       -0.8432     -0.3443       -0.7314     -0.1783       -0.8432     -0.3443
        0.5896      0.2601        0.5561      0.1877        0.5896      0.2601
        0.3911      0.3234        0.4078      0.2843        0.3911      0.3234
       -0.1395     -0.1561       -0.1419     -0.1543       -0.1395     -0.1561
       -0.2361      0.0775       -0.2331      0.0734       -0.2361      0.0775
        0.0186     -0.6332        0.0286     -0.7337        0.0186     -0.6332
        0.8928      0.0103        0.7128      0.0051        0.8928      0.0103
       -0.5605      0.7638       -0.7878      0.5742       -0.5605      0.7638
        0.3064      0.0263        0.2973      0.0240        0.3064      0.0263
 
C8_TO_CARTESIAN_TEST
  C8_TO_CARTESIAN converts C8 to (X,Y).
 
        C1=C8_UNIFORM_01    (X2,Y2)=C8_TO_CARTESIAN(C1)     C3=CARTESIAN_TO_C8(X2,Y2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.4499     -0.1267        0.4499     -0.1267
       -0.8432     -0.3443       -0.8432     -0.3443       -0.8432     -0.3443
        0.5896      0.2601        0.5896      0.2601        0.5896      0.2601
        0.3911      0.3234        0.3911      0.3234        0.3911      0.3234
       -0.1395     -0.1561       -0.1395     -0.1561       -0.1395     -0.1561
       -0.2361      0.0775       -0.2361      0.0775       -0.2361      0.0775
        0.0186     -0.6332        0.0186     -0.6332        0.0186     -0.6332
        0.8928      0.0103        0.8928      0.0103        0.8928      0.0103
       -0.5605      0.7638       -0.5605      0.7638       -0.5605      0.7638
        0.3064      0.0263        0.3064      0.0263        0.3064      0.0263
 
C8_TO_POLAR_TEST
  C8_TO_POLAR converts C8 to (R,T).
 
        C1=C8_UNIFORM_01       (R2,T2)=C8_TO_POLAR(C1)     C3=POLAR_TO_C8(R2,T2)
     ---------------------     ---------------------     ---------------------
 
        0.4499     -0.1267        0.4674      6.0087        0.4499     -0.1267
       -0.8432     -0.3443        0.9108      3.5292       -0.8432     -0.3443
        0.5896      0.2601        0.6444      0.4154        0.5896      0.2601
        0.3911      0.3234        0.5075      0.6909        0.3911      0.3234
       -0.1395     -0.1561        0.2094      3.9833       -0.1395     -0.1561
       -0.2361      0.0775        0.2484      2.8245       -0.2361      0.0775
        0.0186     -0.6332        0.6335      4.7418        0.0186     -0.6332
        0.8928      0.0103        0.8929      0.0116        0.8928      0.0103
       -0.5605      0.7638        0.9474      2.2038       -0.5605      0.7638
        0.3064      0.0263        0.3075      0.0856        0.3064      0.0263
 
C8_UNIFORM_01_TEST
  C8_UNIFORM_01 returns a uniformly random "unit" C8.
 
       C1=C8_UNIFORM_01(SEED)
     ---------------------
 
        0.4499     -0.1267
       -0.8432     -0.3443
        0.5896      0.2601
        0.3911      0.3234
       -0.1395     -0.1561
       -0.2361      0.0775
        0.0186     -0.6332
        0.8928      0.0103
       -0.5605      0.7638
        0.3064      0.0263
 
C8_ZERO_TEST
  C8_ZERO returns 0 as a C8.

  C1 = C8_ZERO ( ) =  (   0.00000    ,   0.00000    )
 
C8MAT_IDENTITY_TEST
  C8MAT_IDENTITY returns the complex identity matrix.
 
  The C8MAT_IDENTITY matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00                0.00                0.00                0.00              
    2:  0.00                1.00                0.00                0.00              
    3:  0.00                0.00                1.00                0.00              
    4:  0.00                0.00                0.00                1.00              
 
C8MAT_INDICATOR_TEST
  C8MAT_INDICATOR returns the complex indicator matrix.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    
 
C8MAT_NORM_FRO_TEST
  C8MAT_NORM_FRO returns the Frobenius norm of a matrix.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    

  The Frobenius norm =    19.2354    
 
C8MAT_NORM_L1_TEST
  C8MAT_NORM_L1 returns the L1 norm of a matrix.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    

  The L1 norm =    25.6552    
 
C8MAT_NORM_LI_TEST
  C8MAT_NORM_LI returns the Loo norm of a C8MAT.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    

  The Loo norm =    22.7183    
 
C8MAT_UNIFORM_01_TEST
  C8MAT_UNIFORM_01 computes a "random" complex matrix.
 
  The matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1: 0.450    -0.127    -0.236     0.775E-01 0.501    -0.780    -0.770    -0.314    
    2:-0.843    -0.344     0.186E-01-0.633     0.350     0.166E-01-0.889     0.266    
    3: 0.590     0.260     0.893     0.103E-01 0.435    -0.267    -0.780    -0.551    
    4: 0.391     0.323    -0.560     0.764    -0.201     0.271     0.314E-01-0.434    
    5:-0.139    -0.156     0.306     0.263E-01-0.975E-01 0.902     0.249     0.579    
 
C8VEC_INDICATOR_TEST
  C8VEC_INDICATOR sets A = (1-1i,2-2i,...,N-Ni)
 
  The "indicator" vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    
         6     6.00000      -6.00000    
         7     7.00000      -7.00000    
         8     8.00000      -8.00000    
         9     9.00000      -9.00000    
        10     10.0000      -10.0000    
 
C8VEC_NINT_TEST
  C8VEC_NINT rounds a complex vector.
 
  The initial vector:
 
         1     2.62930      0.716242    
         2    -3.18314      -4.25099    
         3     2.16786       3.06933    
         4    0.985498       2.79042    
         5   -0.228922      -1.19907    
 
  The rounded vector:
 
         1     3.00000       1.00000    
         2    -3.00000      -4.00000    
         3     2.00000       3.00000    
         4     1.00000       3.00000    
         5     0.00000      -1.00000    
 
C8VEC_NORM_L1_TEST
  C8VEC_NORM_L1 returns the L1 norm of a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    

  The L1 norm =    21.2132    
 
C8VEC_NORM_L2_TEST
  C8VEC_NORM_L2 returns the L2 norm of a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    

  The L2 norm =    10.4881    
 
C8VEC_NORM_LI_TEST
  C8VEC_NORM_LI returns the Loo norm of a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    

  The Loo norm =    7.07107    
 
C8VEC_PRINT_TEST
  C8VEC_PRINT prints a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    
 
C8VEC_PRINT_PART_TEST
  C8VEC_PRINT_PART prints part of a C8VEC.
 
  Part of the C8VEC:
 
         1:    1.00000        -1.00000    
         2:    2.00000        -2.00000    
         3:    3.00000        -3.00000    
         4:    4.00000        -4.00000    
         5:    5.00000        -5.00000    
         6:    6.00000        -6.00000    
         7:    7.00000        -7.00000    
         8:    8.00000        -8.00000    
  ........  ..............  ..............
       100:    100.000        -100.000    
 
C8VEC_SORT_A_L1_TEST
  C8VEC_SORT_A_L1 sorts a C8VEC by L1 norm.
 
  The unsorted vector
 
         1    0.449860     -0.126667    
         2   -0.843197     -0.344280    
         3    0.589627      0.260090    
         4    0.391140      0.323400    
         5   -0.139466     -0.156136    
         6   -0.236066      0.774593E-01
         7    0.185993E-01 -0.633214    
         8    0.892850      0.103136E-01
         9   -0.560465      0.763795    
        10    0.306357      0.262752E-01

  I             A(I)                   L1(A(I))

   1   -0.139466     -0.156136        0.295601    
   2   -0.236066      0.774593E-01    0.313526    
   3    0.306357      0.262752E-01    0.332632    
   4    0.449860     -0.126667        0.576527    
   5    0.185993E-01 -0.633214        0.651814    
   6    0.391140      0.323400        0.714540    
   7    0.589627      0.260090        0.849717    
   8    0.892850      0.103136E-01    0.903163    
   9   -0.843197     -0.344280         1.18748    
  10   -0.560465      0.763795         1.32426    
 
C8VEC_SORT_A_L2_TEST
  C8VEC_SORT_A_L2 sorts a C8VEC by L2 norm.
 
  The unsorted vector
 
         1    0.449860     -0.126667    
         2   -0.843197     -0.344280    
         3    0.589627      0.260090    
         4    0.391140      0.323400    
         5   -0.139466     -0.156136    
         6   -0.236066      0.774593E-01
         7    0.185993E-01 -0.633214    
         8    0.892850      0.103136E-01
         9   -0.560465      0.763795    
        10    0.306357      0.262752E-01

   I             A(I)                   L2(A(I))

   1   -0.139466     -0.156136        0.209354    
   2   -0.236066      0.774593E-01    0.248450    
   3    0.306357      0.262752E-01    0.307481    
   4    0.449860     -0.126667        0.467352    
   5    0.391140      0.323400        0.507521    
   6    0.185993E-01 -0.633214        0.633487    
   7    0.589627      0.260090        0.644443    
   8    0.892850      0.103136E-01    0.892909    
   9   -0.843197     -0.344280        0.910774    
  10   -0.560465      0.763795        0.947367    
 
C8VEC_SORT_A_LI_TEST
  C8VEC_SORT_A_LI ascending sorts a C8VEC by Loo norm.
 
  The unsorted vector
 
         1    0.449860     -0.126667    
         2   -0.843197     -0.344280    
         3    0.589627      0.260090    
         4    0.391140      0.323400    
         5   -0.139466     -0.156136    
         6   -0.236066      0.774593E-01
         7    0.185993E-01 -0.633214    
         8    0.892850      0.103136E-01
         9   -0.560465      0.763795    
        10    0.306357      0.262752E-01

   I             A(I)                   Loo(A(I))

   1   -0.139466     -0.156136        0.156136    
   2   -0.236066      0.774593E-01    0.236066    
   3    0.306357      0.262752E-01    0.306357    
   4    0.391140      0.323400        0.391140    
   5    0.449860     -0.126667        0.449860    
   6    0.589627      0.260090        0.589627    
   7    0.185993E-01 -0.633214        0.633214    
   8   -0.560465      0.763795        0.763795    
   9   -0.843197     -0.344280        0.843197    
  10    0.892850      0.103136E-01    0.892850    
 
C8VEC_SPIRAL_TEST
  C8VEC_SPIRAL returns N points on a spiral
  which includes M complete turns.
 
  The spiral points:
 
         1     5.00000       0.00000    
         2     4.18579       2.41667    
         3     2.33333       4.04145    
         4    0.275546E-15   4.50000    
         5    -2.16667       3.75278    
         6    -3.60844       2.08333    
         7    -4.00000      0.489859E-15
         8    -3.31976      -1.91667    
         9    -1.83333      -3.17543    
        10   -0.642940E-15  -3.50000    
        11     1.66667      -2.88675    
        12     2.74241      -1.58333    
        13     3.00000     -0.734788E-15
 
C8VEC_UNIFORM_01_TEST
  C8VEC_UNIFORM_01 computes a "random" complex vector.
 
  The C8VEC_UNIFORM_01 vector:
 
         1    0.449860     -0.126667    
         2   -0.843197     -0.344280    
         3    0.589627      0.260090    
         4    0.391140      0.323400    
         5   -0.139466     -0.156136    
 
C8VEC_UNITY_TEST
  C8VEC_UNITY returns the N roots of unity
 
  The N roots of unity:
 
         1     1.00000       0.00000    
         2    0.866025      0.500000    
         3    0.500000      0.866025    
         4    0.612323E-16   1.00000    
         5   -0.500000      0.866025    
         6   -0.866025      0.500000    
         7    -1.00000      0.122465E-15
         8   -0.866025     -0.500000    
         9   -0.500000     -0.866025    
        10   -0.183697E-15  -1.00000    
        11    0.500000     -0.866025    
        12    0.866025     -0.500000    
 
CARTESIAN_TO_C8_TEST
  CARTESIAN_TO_C8 converts (X,Y) to C8.
 
      X1,Y1=R8_UNIFORM_01    C2=CARTESIAN_TO_C8(X1,Y1)     X3,Y3=C8_TO_CARTESIAN(C2)
     ---------------------     ---------------------     ---------------------
 
        0.2184      0.9563        0.2184      0.9563        0.2184      0.9563
        0.8295      0.5617        0.8295      0.5617        0.8295      0.5617
        0.4153      0.0661        0.4153      0.0661        0.4153      0.0661
        0.2576      0.1100        0.2576      0.1100        0.2576      0.1100
        0.0438      0.6340        0.0438      0.6340        0.0438      0.6340
        0.0617      0.4495        0.0617      0.4495        0.0617      0.4495
        0.4013      0.7547        0.4013      0.7547        0.4013      0.7547
        0.7973      0.0018        0.7973      0.0018        0.7973      0.0018
        0.8975      0.3508        0.8975      0.3508        0.8975      0.3508
        0.0945      0.0136        0.0945      0.0136        0.0945      0.0136
 
POLAR_TO_C8_TEST
  POLAR_TO_C8 converts (R,T) to C8.
 
      (R1,T1)=R8_UNIFORM_01()    C2=POLAR_TO_C8(R1,T1)    (R3,T3)=C8_TO_POLAR(C2)
     ---------------------     ---------------------     ---------------------
 
        0.2184      6.0087        0.2102     -0.0592        0.2184      6.0087
        0.8295      3.5292       -0.7680     -0.3136        0.8295      3.5292
        0.4153      0.4154        0.3800      0.1676        0.4153      0.4154
        0.2576      0.6909        0.1985      0.1641        0.2576      0.6909
        0.0438      3.9833       -0.0292     -0.0327        0.0438      3.9833
        0.0617      2.8245       -0.0587      0.0192        0.0617      2.8245
        0.4013      4.7418        0.0118     -0.4011        0.4013      4.7418
        0.7973      0.0116        0.7972      0.0092        0.7973      0.0116
        0.8975      2.2038       -0.5310      0.7236        0.8975      2.2038
        0.0945      0.0856        0.0942      0.0081        0.0945      0.0856
 
R8_ATAN_TEST
  R8_ATAN computes the arc-tangent given Y and X;
  ATAN2 is the system version of this routine.
 
       X               Y          ATAN2(Y,X)    R8_ATAN(Y,X)
 
     1.00000         0.00000         0.00000         0.00000    
     1.00000         1.00000        0.785398        0.785398    
     0.00000         1.00000         1.57080         1.57080    
    -1.00000         1.00000         2.35619         2.35619    
    -1.00000         0.00000         3.14159         3.14159    
    -1.00000        -1.00000        -2.35619         3.92699    
     0.00000        -1.00000        -1.57080         4.71239    
     1.00000        -1.00000       -0.785398         5.49779    
 
R8_UNIFORM_01_TEST
  R8_UNIFORM_01 samples a uniform random
  distribution in [0,1].
 
  Starting with seed =    123456789
 
  First few values:
 
         1    0.218418    
         2    0.956318    
         3    0.829509    
         4    0.561695    
         5    0.415307    
 
  Number of values computed was N =     1000
  Average value was   0.503040    
  Minimum value was   0.183837E-02
  Maximum value was   0.997908    
  Variance was   0.822497E-01
 
R8POLY2_ROOT_TEST
  R8POLY2_ROOT finds quadratic equation roots.
 
         A         B         C     R1         R2
 
       2.0    -2.0   -24.0   4.00000      -0.00000      -3.00000       0.00000    
       1.0   -20.0   100.0   10.0000      -0.00000       10.0000       0.00000    
       1.0    -2.0    10.0   1.00000       3.00000       1.00000      -3.00000    
 
R8POLY3_ROOT_TEST
  R8POLY3_ROOT finds roots of cubic equations.
 
 
  Polynomial coefficients A, B, C, D:
 
     1.00000      -6.00000       11.0000      -6.00000    
 
  Roots:
 
     1.00000       0.00000    
     3.00000       0.00000    
     2.00000       0.00000    
 
  Polynomial coefficients A, B, C, D:
 
     9.00000      -36.0000       54.0000      -27.0000    
 
  Roots:
 
     1.00000       0.00000    
     1.50000     -0.866025    
     1.50000      0.866025    
 
  Polynomial coefficients A, B, C, D:
 
     1.00000      -5.00000       8.00000      -4.00000    
 
  Roots:
 
     1.00000       0.00000    
     2.00000       0.00000    
     2.00000       0.00000    
 
  Polynomial coefficients A, B, C, D:
 
     1.00000      -8.00000       25.0000      -26.0000    
 
  Roots:
 
     2.00000       0.00000    
     3.00000      -2.00000    
     3.00000       2.00000    
 
R8POLY4_ROOT_TEST
  R8POLY4_ROOT finds roots of quartic equations.
 
 
  A =   1.00000    
  B =  -10.0000    
  C =   35.0000    
  D =  -50.0000    
  E =   24.0000    
 
  Roots:
 
     4.00000       0.00000    
     1.00000       0.00000    
     3.00000       0.00000    
     2.00000       0.00000    
 
  A =   1.00000    
  B =  -5.00000    
  C =   1.00000    
  D =   21.0000    
  E =  -18.0000    
 
  Roots:
 
     3.00000       0.00000    
     3.00000       0.00000    
     1.00000       0.00000    
    -2.00000       0.00000    
 
  A =   1.00000    
  B =  -22.0000    
  C =   141.000    
  D =  -220.000    
  E =   100.000    
 
  Roots:
 
     10.0000       0.00000    
     10.0000       0.00000    
     1.00000       0.00000    
     1.00000       0.00000    
 
  A =   1.00000    
  B =  -16.0000    
  C =   72.0000    
  D =  -128.000    
  E =   80.0000    
 
  Roots:
 
     10.0000       0.00000    
     2.00000       0.00000    
     2.00000       0.00000    
     2.00000       0.00000    
 
  A =   1.00000    
  B =  -20.0000    
  C =   150.000    
  D =  -500.000    
  E =   625.000    
 
  Roots:
 
     5.00000       0.00000    
     5.00000       0.00000    
     5.00000       0.00000    
     5.00000       0.00000    
 
  A =   1.00000    
  B =   2.00000    
  C =   1.00000    
  D =   8.00000    
  E =  -12.0000    
 
  Roots:
 
   -0.166533E-15   2.00000    
   -0.166533E-15  -2.00000    
     1.00000       0.00000    
    -3.00000       0.00000    
 
  A =   1.00000    
  B =   0.00000    
  C =   13.0000    
  D =   0.00000    
  E =   36.0000    
 
  Roots:
 
     0.00000       3.00000    
     0.00000       2.00000    
     0.00000      -2.00000    
    -0.00000      -3.00000    
 
C8LIB_TEST
  Normal end of execution.
 
08 June 2020   3:42:41.272 PM
