12 May 2021   8:26:55.518 AM
 
polpak_test():
  FORTRAN90 version
  Test polpak().
 
AGUD_TEST
  AGUD computes the inverse Gudermannian;
 
       X              GUD(X)       AGUD(GUD(X))
 
     1.00000        0.865769         1.00000    
     1.20000        0.985692         1.20000    
     1.40000         1.08725         1.40000    
     1.60000         1.17236         1.60000    
     1.80000         1.24316         1.80000    
     2.00000         1.30176         2.00000    
     2.20000         1.35009         2.20000    
     2.40000         1.38986         2.40000    
     2.60000         1.42252         2.60000    
     2.80000         1.44933         2.80000    
     3.00000         1.47130         3.00000    
 
ALIGN_ENUM_TEST
  ALIGN_ENUM counts the number of possible
  alignments of two biological sequences.
 
  Alignment enumeration table:
 
        0    1    2    3    4       5       6       7       8       9      10
 
   0    1    1    1    1    1       1       1       1       1       1       1
   1    1    3    5    7    9      11      13      15      17      19      21
   2    1    5   13   25   41      61      85     113     145     181     221
   3    1    7   25   63  129     231     377     575     833    1159    1561
   4    1    9   41  129  321     681    1289    2241    3649    5641    8361
   5    1   11   61  231  681    1683    3653    7183   13073   22363   36365
   6    1   13   85  377 1289    3653    8989   19825   40081   75517  134245
   7    1   15  113  575 2241    7183   19825   48639  108545  224143  433905
   8    1   17  145  833 3649   13073   40081  108545  265729  598417 1256465
   9    1   19  181 1159 5641   22363   75517  224143  598417 1462563 3317445
  10    1   21  221 1561 8361   36365  134245  433905 1256465 3317445 8097453
 
BELL_TEST
  BELL computes Bell numbers.
 
     N  exact C(I)  computed C(I)
 
         0           1           1
         1           1           1
         2           2           2
         3           5           5
         4          15          15
         5          52          52
         6         203         203
         7         877         877
         8        4140        4140
         9       21147       21147
        10      115975      115975
 
BELL_POLY_COEF_TEST
  BELL_POLY_COEF returns the coefficients of a
  Bell polynomial.
 
  Table of polynomial coefficients:
 
   0:     1
   1:     0     1
   2:     0     1     1
   3:     0     1     3     1
   4:     0     1     7     6     1
   5:     0     1    15    25    10     1
   6:     0     1    31    90    65    15     1
   7:     0     1    63   301   350   140    21     1
   8:     0     1   127   966  1701  1050   266    28     1
   9:     0     1   255  3025  7770  6951  2646   462    36     1
  10:     0     1   511  9330 34105 42525 22827  5880   750    45     1
 
BENFORD_TEST
  BENFORD(I) is the Benford probability of the
  initial digit sequence I.
 
  I,  BENFORD(I)
 
   1    0.301030    
   2    0.176091    
   3    0.124939    
   4    0.969100E-01
   5    0.791812E-01
   6    0.669468E-01
   7    0.579919E-01
   8    0.511525E-01
   9    0.457575E-01
 
BERNOULLI_NUMBER_TEST
  BERNOULLI_NUMBER computes Bernoulli numbers;
 
   I      Exact     Bernoulli
 
         0     1.00000         1.00000    
         1   -0.500000       -0.500000    
         2    0.166667        0.166667    
         3     0.00000         0.00000    
         4   -0.333333E-01   -0.333333E-01
         6   -0.238095E-01    0.238095E-01
         8   -0.333333E-01   -0.333333E-01
        10    0.757576E-01    0.757576E-01
        20    -529.124        -529.124    
        30    0.601581E+09    0.601581E+09
 
BERNOULLI_NUMBER2_TEST
  BERNOULLI_NUMBER2 computes Bernoulli numbers;
 
   I      Exact     Bernoulli2
 
     0   1.00000       1.00000    
     1 -0.500000     -0.500000    
     2  0.166667      0.166667    
     3   0.00000       0.00000    
     4 -0.333333E-01 -0.333333E-01
     6 -0.238095E-01  0.238095E-01
     8 -0.333333E-01 -0.333333E-01
    10  0.757576E-01  0.757576E-01
    20  -529.124      -529.124    
    30  0.601581E+09  0.601581E+09
 
BERNOULLI_NUMBER3_TEST
  BERNOULLI_NUMBER3 computes Bernoulli numbers.
 
   I      Exact     BERNOULLI3
 
     0   1.00000       1.00000    
     1 -0.500000     -0.500000    
     2  0.166667      0.166667    
     3   0.00000       0.00000    
     4 -0.333333E-01 -0.333331E-01
     6 -0.238095E-01  0.238095E-01
     8 -0.333333E-01 -0.333333E-01
    10  0.757576E-01  0.757576E-01
    20  -529.124      -529.124    
    30  0.601581E+09  0.601581E+09
 
BERNOULLI_POLY_TEST
  BERNOULLI_POLY evaluates Bernoulli polynomials;
 
  X =   0.200000    
 
  I          BX
 
   1   -0.30000000    
   2    0.66666667E-02
   3    0.48000000E-01
   4   -0.77333333E-02
   5   -0.23680000E-01
   6    0.69135238E-02
   7    0.24908800E-01
   8   -0.10149973E-01
   9   -0.45278208E-01
  10    0.23326318E-01
  11    0.12605002    
  12   -0.78146785E-01
  13   -0.49797890    
  14    0.36043995    
  15     2.6487812    
 
BERNOULLI_POLY2_TEST
  BERNOULLI_POLY2 evaluates Bernoulli polynomials. 
 
  X =   0.200000    
 
  I          BX
 
   1   -0.30000000    
   2    0.66666667E-02
   3    0.48000000E-01
   4   -0.77331387E-02
   5   -0.23679805E-01
   6    0.69136254E-02
   7    0.24908833E-01
   8   -0.10149965E-01
   9   -0.45278204E-01
  10    0.23326320E-01
  11    0.12605002    
  12   -0.78146787E-01
  13   -0.49797890    
  14    0.36043994    
  15     2.6487812    
 
BERNSTEIN_POLY_TEST:
  BERNSTEIN_POLY evaluates the Bernstein polynomials.
 
     N   K   X       Exact        B(N,K)(X)
 
     0   0 0.2500   1.00000       1.00000    
     1   0 0.2500  0.750000      0.750000    
     1   1 0.2500  0.250000      0.250000    
     2   0 0.2500  0.562500      0.562500    
     2   1 0.2500  0.375000      0.375000    
     2   2 0.2500  0.625000E-01  0.625000E-01
     3   0 0.2500  0.421875      0.421875    
     3   1 0.2500  0.421875      0.421875    
     3   2 0.2500  0.140625      0.140625    
     3   3 0.2500  0.156250E-01  0.156250E-01
     4   0 0.2500  0.316406      0.316406    
     4   1 0.2500  0.421875      0.421875    
     4   2 0.2500  0.210938      0.210938    
     4   3 0.2500  0.468750E-01  0.468750E-01
     4   4 0.2500  0.390625E-02  0.390625E-02
 
BPAB_TEST
  BPAB evaluates Bernstein polynomials.
 
  The Bernstein polynomials of degree   10
  based on the interval from    0.00000    
  to    1.00000    
  evaluated at X =   0.300000    
 
     0    0.282475E-01
     1    0.121061    
     2    0.233474    
     3    0.266828    
     4    0.200121    
     5    0.102919    
     6    0.367569E-01
     7    0.900169E-02
     8    0.144670E-02
     9    0.137781E-03
    10    0.590490E-05
 
CARDAN_POLY_TEST
  CARDAN_POLY evaluates a Cardan polynomial directly.
 
  Compare CARDAN_POLY_COEF + R8POLY_VAL_HORNER
  versus CARDAN_POLY alone.
 
  Evaluate polynomials at X =   0.250000    
  We use the parameter S =   0.500000    
 
  Order, Horner, Direct
 
   0   2.00000       2.00000    
   1  0.250000      0.250000    
   2 -0.937500     -0.937500    
   3 -0.359375     -0.359375    
   4  0.378906      0.378906    
   5  0.274414      0.274414    
   6 -0.120850     -0.120850    
   7 -0.167419     -0.167419    
   8  0.185699E-01  0.185699E-01
   9  0.883522E-01  0.883522E-01
  10  0.128031E-01  0.128031E-01
 
CARDAN_POLY_COEF_TEST
  CARDAN_POLY_COEF returns the coefficients of a
  Cardan polynomial.
 
  We use the parameter S =    1.00000    
 
  Table of polynomial coefficients:
 
   0     2.
   1     0.     1.
   2    -2.     0.     1.
   3     0.    -3.     0.     1.
   4     2.     0.    -4.     0.     1.
   5     0.     5.     0.    -5.     0.     1.
   6    -2.     0.     9.     0.    -6.     0.     1.
   7     0.    -7.     0.    14.     0.    -7.     0.     1.
   8     2.     0.   -16.     0.    20.     0.    -8.     0.     1.
   9     0.     9.     0.   -30.     0.    27.     0.    -9.     0.     1.
  10    -2.     0.    25.     0.   -50.     0.    35.     0.   -10.     0.     1.

CARDINAL_COS_TEST
  CARDINAL_COS evaluates cardinal cosine functions.
  Ci(Tj) = Delta(i,j), where Tj = cos(pi*i/(n+1)).
  A simple check of all pairs should form the identity matrix.

  The CARDINAL_COS test matrix:

   1.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0

CARDINAL_SIN_TEST
  CARDINAL_SIN evaluates cardinal sine functions.
  Si(Tj) = Delta(i,j), where Tj = cos(pi*i/(n+1)).
  A simple check of all pairs should form the identity matrix.

  The CARDINAL_SIN test matrix:

   1.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0   0.0
   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0  -0.0
  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0  -0.0   0.0   1.0
 
CATALAN_TEST
  CATALAN computes Catalan numbers.
 
  N  exact C(I)  computed C(I)
 
     0       1       1
     1       1       1
     2       2       2
     3       5       5
     4      14      14
     5      42      42
     6     132     132
     7     429     429
     8    1430    1430
     9    4862    4862
    10   16796   16796
 
CATALAN_ROW_NEXT_TEST
  CATALAN_ROW_NEXT computes a row of Catalan's triangle.
 
  First, compute row 7:
   7       1     7    27    75   165   297   429   429
 
  Now compute rows one at a time:
 
   0       1
   1       1     1
   2       1     2     2
   3       1     3     5     5
   4       1     4     9    14    14
   5       1     5    14    28    42    42
   6       1     6    20    48    90   132   132
   7       1     7    27    75   165   297   429   429
   8       1     8    35   110   275   572  1001  1430  1430
   9       1     9    44   154   429  1001  2002  3432  4862  4862
  10       1    10    54   208   637  1638  3640  7072 11934 16796 16796
 
CHARLIER_TEST:
  CHARLIER evaluates Charlier polynomials.
 
       N      A         X        P(N,A,X)
 
 
         0    0.2500    0.0000     1.00000    
         1    0.2500    0.0000    -0.00000    
         2    0.2500    0.0000    -4.00000    
         3    0.2500    0.0000    -36.0000    
         4    0.2500    0.0000    -420.000    
         5    0.2500    0.0000    -6564.00    
 
         0    0.2500    0.5000     1.00000    
         1    0.2500    0.5000    -2.00000    
         2    0.2500    0.5000    -10.0000    
         3    0.2500    0.5000    -54.0000    
         4    0.2500    0.5000    -474.000    
         5    0.2500    0.5000    -6246.00    
 
         0    0.2500    1.0000     1.00000    
         1    0.2500    1.0000    -4.00000    
         2    0.2500    1.0000    -8.00000    
         3    0.2500    1.0000    -8.00000    
         4    0.2500    1.0000     24.0000    
         5    0.2500    1.0000     440.000    
 
         0    0.2500    1.5000     1.00000    
         1    0.2500    1.5000    -6.00000    
         2    0.2500    1.5000     2.00000    
         3    0.2500    1.5000     54.0000    
         4    0.2500    1.5000     354.000    
         5    0.2500    1.5000     3030.00    
 
         0    0.2500    2.0000     1.00000    
         1    0.2500    2.0000    -8.00000    
         2    0.2500    2.0000     20.0000    
         3    0.2500    2.0000     84.0000    
         4    0.2500    2.0000     180.000    
         5    0.2500    2.0000     276.000    
 
         0    0.2500    2.5000     1.00000    
         1    0.2500    2.5000    -10.0000    
         2    0.2500    2.5000     46.0000    
         3    0.2500    2.5000     34.0000    
         4    0.2500    2.5000    -450.000    
         5    0.2500    2.5000    -3694.00    
 
         0    0.5000    0.0000     1.00000    
         1    0.5000    0.0000    -0.00000    
         2    0.5000    0.0000    -2.00000    
         3    0.5000    0.0000    -10.0000    
         4    0.5000    0.0000    -58.0000    
         5    0.5000    0.0000    -442.000    
 
         0    0.5000    0.5000     1.00000    
         1    0.5000    0.5000    -1.00000    
         2    0.5000    0.5000    -4.00000    
         3    0.5000    0.5000    -12.0000    
         4    0.5000    0.5000    -48.0000    
         5    0.5000    0.5000    -288.000    
 
         0    0.5000    1.0000     1.00000    
         1    0.5000    1.0000    -2.00000    
         2    0.5000    1.0000    -4.00000    
         3    0.5000    1.0000    -4.00000    
         4    0.5000    1.0000     4.00000    
         5    0.5000    1.0000     60.0000    
 
         0    0.5000    1.5000     1.00000    
         1    0.5000    1.5000    -3.00000    
         2    0.5000    1.5000    -2.00000    
         3    0.5000    1.5000     8.00000    
         4    0.5000    1.5000     44.0000    
         5    0.5000    1.5000     200.000    
 
         0    0.5000    2.0000     1.00000    
         1    0.5000    2.0000    -4.00000    
         2    0.5000    2.0000     2.00000    
         3    0.5000    2.0000     18.0000    
         4    0.5000    2.0000     42.0000    
         5    0.5000    2.0000     66.0000    
 
         0    0.5000    2.5000     1.00000    
         1    0.5000    2.5000    -5.00000    
         2    0.5000    2.5000     8.00000    
         3    0.5000    2.5000     20.0000    
         4    0.5000    2.5000    -8.00000    
         5    0.5000    2.5000    -192.000    
 
         0    1.0000    0.0000     1.00000    
         1    1.0000    0.0000    -0.00000    
         2    1.0000    0.0000    -1.00000    
         3    1.0000    0.0000    -3.00000    
         4    1.0000    0.0000    -9.00000    
         5    1.0000    0.0000    -33.0000    
 
         0    1.0000    0.5000     1.00000    
         1    1.0000    0.5000   -0.500000    
         2    1.0000    0.5000    -1.75000    
         3    1.0000    0.5000    -3.37500    
         4    1.0000    0.5000    -6.56250    
         5    1.0000    0.5000    -16.0312    
 
         0    1.0000    1.0000     1.00000    
         1    1.0000    1.0000    -1.00000    
         2    1.0000    1.0000    -2.00000    
         3    1.0000    1.0000    -2.00000    
         4    1.0000    1.0000     0.00000    
         5    1.0000    1.0000     8.00000    
 
         0    1.0000    1.5000     1.00000    
         1    1.0000    1.5000    -1.50000    
         2    1.0000    1.5000    -1.75000    
         3    1.0000    1.5000    0.375000    
         4    1.0000    1.5000     6.18750    
         5    1.0000    1.5000     20.1562    
 
         0    1.0000    2.0000     1.00000    
         1    1.0000    2.0000    -2.00000    
         2    1.0000    2.0000    -1.00000    
         3    1.0000    2.0000     3.00000    
         4    1.0000    2.0000     9.00000    
         5    1.0000    2.0000     15.0000    
 
         0    1.0000    2.5000     1.00000    
         1    1.0000    2.5000    -2.50000    
         2    1.0000    2.5000    0.250000    
         3    1.0000    2.5000     5.12500    
         4    1.0000    2.5000     6.93750    
         5    1.0000    2.5000    -3.15625    
 
         0    2.0000    0.0000     1.00000    
         1    2.0000    0.0000    -0.00000    
         2    2.0000    0.0000   -0.500000    
         3    2.0000    0.0000    -1.00000    
         4    2.0000    0.0000    -1.75000    
         5    2.0000    0.0000    -3.25000    
 
         0    2.0000    0.5000     1.00000    
         1    2.0000    0.5000   -0.250000    
         2    2.0000    0.5000   -0.812500    
         3    2.0000    0.5000    -1.17188    
         4    2.0000    0.5000    -1.41797    
         5    2.0000    0.5000    -1.55566    
 
         0    2.0000    1.0000     1.00000    
         1    2.0000    1.0000   -0.500000    
         2    2.0000    1.0000    -1.00000    
         3    2.0000    1.0000    -1.00000    
         4    2.0000    1.0000   -0.500000    
         5    2.0000    1.0000    0.750000    
 
         0    2.0000    1.5000     1.00000    
         1    2.0000    1.5000   -0.750000    
         2    2.0000    1.5000    -1.06250    
         3    2.0000    1.5000   -0.578125    
         4    2.0000    1.5000    0.582031    
         5    2.0000    1.5000     2.46582    
 
         0    2.0000    2.0000     1.00000    
         1    2.0000    2.0000    -1.00000    
         2    2.0000    2.0000    -1.00000    
         3    2.0000    2.0000     0.00000    
         4    2.0000    2.0000     1.50000    
         5    2.0000    2.0000     3.00000    
 
         0    2.0000    2.5000     1.00000    
         1    2.0000    2.5000    -1.25000    
         2    2.0000    2.5000   -0.812500    
         3    2.0000    2.5000    0.640625    
         4    2.0000    2.5000     2.01953    
         5    2.0000    2.5000     2.25293    
 
         0   10.0000    0.0000     1.00000    
         1   10.0000    0.0000    -0.00000    
         2   10.0000    0.0000   -0.100000    
         3   10.0000    0.0000   -0.120000    
         4   10.0000    0.0000   -0.126000    
         5   10.0000    0.0000   -0.128400    
 
         0   10.0000    0.5000     1.00000    
         1   10.0000    0.5000   -0.500000E-01
         2   10.0000    0.5000   -0.152500    
         3   10.0000    0.5000   -0.165375    
         4   10.0000    0.5000   -0.160969    
         5   10.0000    0.5000   -0.151158    
 
         0   10.0000    1.0000     1.00000    
         1   10.0000    1.0000   -0.100000    
         2   10.0000    1.0000   -0.200000    
         3   10.0000    1.0000   -0.200000    
         4   10.0000    1.0000   -0.180000    
         5   10.0000    1.0000   -0.154000    
 
         0   10.0000    1.5000     1.00000    
         1   10.0000    1.5000   -0.150000    
         2   10.0000    1.5000   -0.242500    
         3   10.0000    1.5000   -0.224625    
         4   10.0000    1.5000   -0.185569    
         5   10.0000    1.5000   -0.142111    
 
         0   10.0000    2.0000     1.00000    
         1   10.0000    2.0000   -0.200000    
         2   10.0000    2.0000   -0.280000    
         3   10.0000    2.0000   -0.240000    
         4   10.0000    2.0000   -0.180000    
         5   10.0000    2.0000   -0.120000    
 
         0   10.0000    2.5000     1.00000    
         1   10.0000    2.5000   -0.250000    
         2   10.0000    2.5000   -0.312500    
         3   10.0000    2.5000   -0.246875    
         4   10.0000    2.5000   -0.165469    
         5   10.0000    2.5000   -0.915391E-01
 
CHEBY_T_POLY_TEST
  CHEBY_T_POLY evaluates the Chebyshev T polynomial.
 
     N      X        Exact F       T(N)(X)
 
         0  0.8000   1.00000       1.00000    
         1  0.8000  0.800000      0.800000    
         2  0.8000  0.280000      0.280000    
         3  0.8000 -0.352000     -0.352000    
         4  0.8000 -0.843200     -0.843200    
         5  0.8000 -0.997120     -0.997120    
         6  0.8000 -0.752192     -0.752192    
         7  0.8000 -0.206387     -0.206387    
         8  0.8000  0.421972      0.421972    
         9  0.8000  0.881543      0.881543    
        10  0.8000  0.988497      0.988497    
        11  0.8000  0.700051      0.700051    
        12  0.8000  0.131586      0.131586    
 
CHEBY_T_POLY_COEF_TEST
  CHEBY_T_POLY_COEF determines the Chebyshev T polynomial coefficients.
 
  T( 0)
 
     1.00000    
 
  T( 1)
 
     1.00000     * x
     0.00000    
 
  T( 2)
 
     2.00000     * x** 2
     0.00000     * x
    -1.00000    
 
  T( 3)
 
     4.00000     * x** 3
     0.00000     * x** 2
    -3.00000     * x
    -0.00000    
 
  T( 4)
 
     8.00000     * x** 4
     0.00000     * x** 3
    -8.00000     * x** 2
    -0.00000     * x
     1.00000    
 
  T( 5)
 
     16.0000     * x** 5
     0.00000     * x** 4
    -20.0000     * x** 3
    -0.00000     * x** 2
     5.00000     * x
     0.00000    
 
CHEBY_T_POLY_ZERO_TEST:
  CHEBY_T_POLY_ZERO returns zeroes of T(N)(X).
 
       N      X        T(N)(X)
 
         1    0.0000    0.612323E-16
 
         2    0.7071    0.222045E-15
         2   -0.7071   -0.222045E-15
 
         3    0.8660    0.333067E-15
         3    0.0000   -0.183697E-15
         3   -0.8660   -0.333067E-15
 
         4    0.9239   -0.222045E-15
         4    0.3827   -0.222045E-15
         4   -0.3827    0.111022E-15
         4   -0.9239   -0.222045E-15
 
CHEBY_U_POLY_TEST
  CHEBY_U_POLY evaluates the Chebyshev U polynomial.
 
     N      X        Exact F       U(N)(X)
 
         0  0.8000   1.00000       1.00000    
         1  0.8000   1.60000       1.60000    
         2  0.8000   1.56000       1.56000    
         3  0.8000  0.896000      0.896000    
         4  0.8000 -0.126400     -0.126400    
         5  0.8000  -1.09824      -1.09824    
         6  0.8000  -1.63078      -1.63078    
         7  0.8000  -1.51101      -1.51101    
         8  0.8000 -0.786839     -0.786839    
         9  0.8000  0.252072      0.252072    
        10  0.8000   1.19015       1.19015    
        11  0.8000   1.65217       1.65217    
        12  0.8000   1.45333       1.45333    
 
CHEBY_U_POLY_COEF_TEST
  CHEBY_U_POLY_COEF determines the Chebyshev U polynomial coefficients.
 
  U( 0)
 
     1.00000    
 
  U( 1)
 
     2.00000     * x
     0.00000    
 
  U( 2)
 
     4.00000     * x** 2
     0.00000     * x
    -1.00000    
 
  U( 3)
 
     8.00000     * x** 3
     0.00000     * x** 2
    -4.00000     * x
    -0.00000    
 
  U( 4)
 
     16.0000     * x** 4
     0.00000     * x** 3
    -12.0000     * x** 2
    -0.00000     * x
     1.00000    
 
  U( 5)
 
     32.0000     * x** 5
     0.00000     * x** 4
    -32.0000     * x** 3
    -0.00000     * x** 2
     6.00000     * x
     0.00000    
 
CHEBY_U_POLY_ZERO_TEST:
  CHEBY_U_POLY_ZERO returns zeroes of the U(N)(X).
 
       N      X        U(N)(X)
 
         1    0.0000    0.122465E-15
 
         2    0.5000    0.444089E-15
         2   -0.5000   -0.888178E-15
 
         3    0.7071    0.666134E-15
         3    0.0000   -0.244929E-15
         3   -0.7071    0.666134E-15
 
         4    0.8090     0.00000    
         4    0.3090   -0.111022E-15
         4   -0.3090    0.555112E-15
         4   -0.8090   -0.888178E-15
 
 
CHEBYSHEV_DISCRETE_TEST:
  CHEBYSHEV_DISCRETE evaluates discrete Chebyshev polynomials.
 
       N      M         X        T(N,M,X)
 
 
         0         5    0.0000     1.00000    
         1         5    0.0000    -4.00000    
         2         5    0.0000     12.0000    
         3         5    0.0000    -24.0000    
         4         5    0.0000     24.0000    
         5         5    0.0000     0.00000    
 
         0         5    0.5000     1.00000    
         1         5    0.5000    -3.00000    
         2         5    0.5000     1.50000    
         3         5    0.5000     34.5000    
         4         5    0.5000    -199.125    
         5         5    0.5000     826.875    
 
         0         5    1.0000     1.00000    
         1         5    1.0000    -2.00000    
         2         5    1.0000    -6.00000    
         3         5    1.0000     48.0000    
         4         5    1.0000    -96.0000    
         5         5    1.0000     0.00000    
 
         0         5    1.5000     1.00000    
         1         5    1.5000    -1.00000    
         2         5    1.5000    -10.5000    
         3         5    1.5000     31.5000    
         4         5    1.5000     70.8750    
         5         5    1.5000    -354.375    
 
         0         5    2.0000     1.00000    
         1         5    2.0000     0.00000    
         2         5    2.0000    -12.0000    
         3         5    2.0000    -0.00000    
         4         5    2.0000     144.000    
         5         5    2.0000     0.00000    
 
         0         5    2.5000     1.00000    
         1         5    2.5000     1.00000    
         2         5    2.5000    -10.5000    
         3         5    2.5000    -31.5000    
         4         5    2.5000     70.8750    
         5         5    2.5000     354.375    
 
COLLATZ_COUNT_TEST:
  COLLATZ_COUNT(N) counts the length of the
  Collatz sequence beginning with N.
 
       N       COUNT(N)     COUNT(N)
              (computed)    (table)
 
         1         1         1
         2         2         2
         3         8         8
         4         3         3
         5         6         6
         6         9         9
         7        17        17
         8         4         4
         9        20        20
        10         7         7
        27       112       112
        50        25        25
       100        26        26
       200        27        27
       300        17        17
       400        28        28
       500       111       111
       600        18        18
       700        83        83
       800        29        29
 
COLLATZ_COUNT_MAX_TEST:
  COLLATZ_COUNT_MAX(N) returns the length of the
  longest Collatz sequence from 1 to N.
 
         N     I_MAX     J_MAX
 
        10         9        20
       100        97       119
      1000       871       179
     10000      6171       262
    100000     77031       351
 
COMB_ROW_NEXT_TEST
  COMB_ROW computes a row of Pascal's triangle.
 
   0      1
   1      1    1
   2      1    2    1
   3      1    3    3    1
   4      1    4    6    4    1
   5      1    5   10   10    5    1
   6      1    6   15   20   15    6    1
   7      1    7   21   35   35   21    7    1
   8      1    8   28   56   70   56   28    8    1
   9      1    9   36   84  126  126   84   36    9    1
  10      1   10   45  120  210  252  210  120   45   10    1
 
COMMUL_TEST
  COMMUL computes a multinomial coefficient.
 
 
  N =        8
  Number of factors =        2
   1         6
   2         2
  Value of coefficient =           28
 
  N =        8
  Number of factors =        3
   1         2
   2         2
   3         4
  Value of coefficient =          420
 
  N =       13
  Number of factors =        4
   1         5
   2         3
   3         3
   4         2
  Value of coefficient =       720720

COMPLETE_SYMMETRIC_POLY_TEST
  COMPLETE_SYMMETRIC_POLY evaluates a complete symmetric.
  polynomial in a given set of variables X.
 
  Variable vector X:
 
         1:    1.0000000    
         2:    2.0000000    
         3:    3.0000000    
         4:    4.0000000    
         5:    5.0000000    

   N\R    0       1       2       3       4       5

   0      1.      0.      0.      0.      0.      0.
   1      1.      1.      1.      1.      1.      1.
   2      1.      3.      7.     15.     31.     63.
   3      1.      6.     25.     90.    301.    966.
   4      1.     10.     65.    350.   1701.   7770.
   5      1.     15.    140.   1050.   6951.  42525.
 
COS_POWER_INT_TEST:
  COS_POWER_INT returns values of 
  the integral of COS(X)^N from A to B.
 
      A         B          N      Exact           Computed
 
    0.0000    3.1416         0     3.14159         3.14159    
    0.0000    3.1416         1     0.00000        0.122465E-15
    0.0000    3.1416         2     1.57080         1.57080    
    0.0000    3.1416         3     0.00000        0.122465E-15
    0.0000    3.1416         4     1.17810         1.17810    
    0.0000    3.1416         5     0.00000        0.122465E-15
    0.0000    3.1416         6    0.981748        0.981748    
    0.0000    3.1416         7     0.00000        0.122465E-15
    0.0000    3.1416         8    0.859029        0.859029    
    0.0000    3.1416         9     0.00000        0.122465E-15
    0.0000    3.1416        10    0.773126        0.773126    
 
DELANNOY_TEST
  DELANNOY computes the Delannoy numbers A(0:M,0:N).
  A(M,N) counts the paths from (0,0) to (M,N).
 
     0     1   1   1   1   1       1       1       1         1
     1     1   3   5   7   9      11      13      15        17
     2     1   5  13  25  41      61      85     113       145
     3     1   7  25  63 129     231     377     575       833
     4     1   9  41 129 321     681    1289    2241      3649
     5     1  11  61 231 681    1683    3653    7183     13073
     6     1  13  85 3771289    3653    8989   19825     40081
     7     1  15 113 5752241    7183   19825   48639    108545
     8     1  17 145 8333649   13073   40081  108545    265729

DOMINO_TILING_NUM_TEST:
  DOMINO_TILING_NUM returns the number of tilings of an
  MxN rectangle by dominoes.

   M   N    Tilings

   1   1           0

   2   1           1
   2   2           2

   3   1           0
   3   2           3
   3   3           0

   4   1           1
   4   2           5
   4   3          11
   4   4          36

   5   1           0
   5   2           8
   5   3           0
   5   4          95
   5   5           0

   6   1           1
   6   2          13
   6   3          41
   6   4         281
   6   5        1183
   6   6        6728

   7   1           0
   7   2          21
   7   3           0
   7   4         781
   7   5           0
   7   6       31529
   7   7           0

   8   1           1
   8   2          34
   8   3         153
   8   4        2245
   8   5       14824
   8   6      167089
   8   7     1292697
   8   8    12988816
 
EULER_NUMBER_TEST
  EULER_NUMBER computes Euler numbers.
 
     N       exact   EULER_NUMBER
 
     0           1           1
     1           0           0
     2          -1          -1
     4           5           5
     6         -61         -61
     8        1385        1385
    10      -50521      -50521
    12     2702765     2702765
 
EULER_NUMBER2_TEST
  EULER_NUMBER2 computes Euler numbers.
 
     N       exact   EULER_NUMBER2
 
     0           1   1.00000    
     1           0   0.00000    
     2          -1  -1.00000    
     4           5   5.00000    
     6         -61  -61.0000    
     8        1385   1385.00    
    10      -50521  -50521.0    
    12     2702765  0.270276E+07
 
EULER_POLY_TEST
  EULER_POLY evaluates Euler polynomials.
 
   N      X             F(X)
 
   0    0.500000       1.00000    
   1    0.500000      0.277556E-16
   2    0.500000     -0.250000    
   3    0.500000     -0.145953E-05
   4    0.500000      0.312497    
   5    0.500000     -0.332929E-05
   6    0.500000     -0.953128    
   7    0.500000     -0.173264E-05
   8    0.500000       5.41016    
   9    0.500000     -0.102449E-05
  10    0.500000      -49.3369    
  11    0.500000      0.647439E-06
  12    0.500000       659.855    
  13    0.500000      0.522754E-05
  14    0.500000      -12168.0    
  15    0.500000      0.218677E-03
 
EULERIAN_TEST
  EULERIAN evaluates Eulerian numbers.
 
       1     0     0     0     0     0     0
       1     1     0     0     0     0     0
       1     4     1     0     0     0     0
       1    11    11     1     0     0     0
       1    26    66    26     1     0     0
       1    57   302   302    57     1     0
       1   120  1191  2416  1191   120     1
 
F_HOFSTADTER_TEST
  F_HOFSTADTER evaluates Hofstadter's recursive
  F function.
 
       N   F(N)
 
         0       0
         1       1
         2       1
         3       2
         4       2
         5       3
         6       3
         7       4
         8       4
         9       5
        10       5
        11       6
        12       6
        13       7
        14       7
        15       8
        16       8
        17       9
        18       9
        19      10
        20      10
        21      11
        22      11
        23      12
        24      12
        25      13
        26      13
        27      14
        28      14
        29      15
        30      15
 
FIBONACCI_DIRECT_TEST
  FIBONACCI_DIRECT evalutes a Fibonacci number directly.
 
       I        F(I)
 
         1         1
         2         1
         3         2
         4         3
         5         5
         6         8
         7        13
         8        21
         9        34
        10        55
        11        89
        12       144
        13       233
        14       377
        15       610
        16       987
        17      1597
        18      2584
        19      4181
        20      6765
 
FIBONACCI_FLOOR_TEST
  FIBONACCI_FLOOR computes the largest Fibonacci number
  less than or equal to a given positive integer.
 
       N  Fibonacci  Index
 
         1         1         2
         2         2         3
         3         3         4
         4         3         4
         5         5         5
         6         5         5
         7         5         5
         8         8         6
         9         8         6
        10         8         6
        11         8         6
        12         8         6
        13        13         7
        14        13         7
        15        13         7
        16        13         7
        17        13         7
        18        13         7
        19        13         7
        20        13         7
 
FIBONACCI_RECURSIVE_TEST
  FIBONACCI_RECURSIVE computes the Fibonacci sequence.
 
       N       F(N)
 
         1         1
         2         1
         3         2
         4         3
         5         5
         6         8
         7        13
         8        21
         9        34
        10        55
        11        89
        12       144
        13       233
        14       377
        15       610
        16       987
        17      1597
        18      2584
        19      4181
        20      6765
 
G_HOFSTADTER_TEST
  G_HOFSTADTER evaluates Hofstadter's recursive
  G function.
 
       N   G(N)
 
         0       0
         1       1
         2       1
         3       2
         4       3
         5       3
         6       4
         7       4
         8       5
         9       6
        10       6
        11       7
        12       8
        13       8
        14       9
        15       9
        16      10
        17      11
        18      11
        19      12
        20      12
        21      13
        22      14
        23      14
        24      15
        25      16
        26      16
        27      17
        28      17
        29      18
        30      19
 
GEGENBAUER_POLY_TEST:
  GEGENBAUER_POLY computes values of 
  the Gegenbauer polynomials.
 
       N        A           X       GPV      GEGENBAUER
 
         0      0.5000      0.2000   1.00000       1.00000    
         1      0.5000      0.2000  0.200000      0.200000    
         2      0.5000      0.2000 -0.440000     -0.440000    
         3      0.5000      0.2000 -0.280000     -0.280000    
         4      0.5000      0.2000  0.232000      0.232000    
         5      0.5000      0.2000  0.307520      0.307520    
         6      0.5000      0.2000 -0.805760E-01 -0.805760E-01
         7      0.5000      0.2000 -0.293517     -0.293517    
         8      0.5000      0.2000 -0.395648E-01 -0.395648E-01
         9      0.5000      0.2000  0.245971      0.245957    
        10      0.5000      0.2000  0.129072      0.129072    
         2      0.0000      0.4000   0.00000       0.00000    
         2      1.0000      0.4000 -0.360000     -0.360000    
         2      2.0000      0.4000 -0.800000E-01 -0.800000E-01
         2      3.0000      0.4000  0.840000      0.840000    
         2      4.0000      0.4000   2.40000       2.40000    
         2      5.0000      0.4000   4.60000       4.60000    
         2      6.0000      0.4000   7.44000       7.44000    
         2      7.0000      0.4000   10.9200       10.9200    
         2      8.0000      0.4000   15.0400       15.0400    
         2      9.0000      0.4000   19.8000       19.8000    
         2     10.0000      0.4000   25.2000       25.2000    
         5      3.0000     -0.5000  -9.00000       9.00000    
         5      3.0000     -0.4000 -0.161280     -0.161280    
         5      3.0000     -0.3000  -6.67296      -6.67296    
         5      3.0000     -0.2000  -8.37504      -8.37504    
         5      3.0000     -0.1000  -5.52672      -5.52672    
         5      3.0000      0.0000   0.00000       0.00000    
         5      3.0000      0.1000   5.52672       5.52672    
         5      3.0000      0.2000   8.37504       8.37504    
         5      3.0000      0.3000   6.67296       6.67296    
         5      3.0000      0.4000  0.161280      0.161280    
         5      3.0000      0.5000  -9.00000      -9.00000    
         5      3.0000      0.6000  -15.4253      -15.4253    
         5      3.0000      0.7000  -9.69696      -9.69696    
         5      3.0000      0.8000   22.4410       22.4410    
         5      3.0000      0.9000   100.889       100.889    
         5      3.0000      1.0000   252.000       252.000    
 
GEN_HERMITE_POLY_TEST
  GEN_HERMITE_POLY evaluates the generalized Hermite 
  polynomials.
 
  Table of H(N,MU)(X) for
 
    N(max) =       10
    MU =     0.00000    
    X =         0.00000    
 
         0     1.00000    
         1     0.00000    
         2    -2.00000    
         3    -0.00000    
         4     12.0000    
         5     0.00000    
         6    -120.000    
         7    -0.00000    
         8     1680.00    
         9     0.00000    
        10    -30240.0    
 
  Table of H(N,MU)(X) for
 
    N(max) =       10
    MU =     0.00000    
    X =         1.00000    
 
         0     1.00000    
         1     2.00000    
         2     2.00000    
         3    -4.00000    
         4    -20.0000    
         5    -8.00000    
         6     184.000    
         7     464.000    
         8    -1648.00    
         9    -10720.0    
        10     8224.00    
 
  Table of H(N,MU)(X) for
 
    N(max) =       10
    MU =    0.100000    
    X =         0.00000    
 
         0     1.00000    
         1     0.00000    
         2    -2.40000    
         3    -0.00000    
         4     15.3600    
         5     0.00000    
         6    -159.744    
         7    -0.00000    
         8     2300.31    
         9     0.00000    
        10    -42325.8    
 
  Table of H(N,MU)(X) for
 
    N(max) =       10
    MU =    0.100000    
    X =        0.500000    
 
         0     1.00000    
         1     1.00000    
         2    -1.40000    
         3    -5.40000    
         4     3.56000    
         5     46.7600    
         6     9.73600    
         7    -551.384    
         8    -691.582    
         9     8130.56    
        10     20855.7    
 
  Table of H(N,MU)(X) for
 
    N(max) =       10
    MU =    0.500000    
    X =        0.500000    
 
         0     1.00000    
         1     1.00000    
         2    -3.00000    
         3    -7.00000    
         4     17.0000    
         5     73.0000    
         6    -131.000    
         7    -1007.00    
         8     1089.00    
         9     17201.0    
        10    -4579.00    
 
  Table of H(N,MU)(X) for
 
    N(max) =       10
    MU =     1.00000    
    X =        0.500000    
 
         0     1.00000    
         1     1.00000    
         2    -5.00000    
         3    -9.00000    
         4     41.0000    
         5     113.000    
         6    -461.000    
         7    -1817.00    
         8     6481.00    
         9     35553.0    
        10    -107029.    
 
GEN_LAGUERRE_POLY_TEST
  GEN_LAGUERRE_POLY evaluates the generalized Laguerre 
  polynomials.
 
  Table of L(N,ALPHA)(X) for
 
    N(max) =       10
    ALPHA =     0.00000    
    X =         0.00000    
 
         0     1.00000    
         1     1.00000    
         2     1.00000    
         3     1.00000    
         4     1.00000    
         5     1.00000    
         6     1.00000    
         7     1.00000    
         8     1.00000    
         9     1.00000    
        10     1.00000    
 
  Table of L(N,ALPHA)(X) for
 
    N(max) =       10
    ALPHA =     0.00000    
    X =         1.00000    
 
         0     1.00000    
         1     0.00000    
         2   -0.500000    
         3   -0.666667    
         4   -0.625000    
         5   -0.466667    
         6   -0.256944    
         7   -0.404762E-01
         8    0.153993    
         9    0.309744    
        10    0.418946    
 
  Table of L(N,ALPHA)(X) for
 
    N(max) =       10
    ALPHA =    0.100000    
    X =         0.00000    
 
         0     1.00000    
         1     1.10000    
         2     1.15500    
         3     1.19350    
         4     1.22334    
         5     1.24780    
         6     1.26860    
         7     1.28672    
         8     1.30281    
         9     1.31728    
        10     1.33046    
 
  Table of L(N,ALPHA)(X) for
 
    N(max) =       10
    ALPHA =    0.100000    
    X =        0.500000    
 
         0     1.00000    
         1    0.600000    
         2    0.230000    
         3   -0.673333E-01
         4   -0.289350    
         5   -0.442469    
         6   -0.535747    
         7   -0.578765    
         8   -0.580771    
         9   -0.550311    
        10   -0.495076    
 
  Table of L(N,ALPHA)(X) for
 
    N(max) =       10
    ALPHA =    0.500000    
    X =        0.500000    
 
         0     1.00000    
         1     1.00000    
         2    0.750000    
         3    0.416667    
         4    0.729167E-01
         5   -0.243750    
         6   -0.513715    
         7   -0.727703    
         8   -0.882836    
         9   -0.980303    
        10    -1.02388    
 
  Table of L(N,ALPHA)(X) for
 
    N(max) =       10
    ALPHA =     1.00000    
    X =        0.500000    
 
         0     1.00000    
         1     1.50000    
         2     1.62500    
         3     1.47917    
         4     1.14844    
         5    0.702865    
         6    0.198720    
         7   -0.319620    
         8   -0.817983    
         9    -1.27090    
        10    -1.66028    
 
GUD_TEST:
  GUD evaluates the Gudermannian function.
 
     X      Exact F       GUD(X)
 
   -2.0000  -1.30176      -1.30176    
   -1.0000 -0.865769     -0.865769    
    0.0000   0.00000       0.00000    
    0.1000  0.998337E-01  0.998337E-01
    0.2000  0.198680      0.198680    
    0.5000  0.480381      0.480381    
    1.0000  0.865769      0.865769    
    1.5000   1.13173       1.13173    
    2.0000   1.30176       1.30176    
    2.5000   1.40699       1.40699    
    3.0000   1.47130       1.47130    
    3.5000   1.51042       1.51042    
    4.0000   1.53417       1.53417    
 
H_HOFSTADTER_TEST
  H_HOFSTADTER evaluates Hofstadter's recursive
  H function.
 
       N   H(N)
 
         0         0
         1         1
         2         1
         3         2
         4         3
         5         4
         6         4
         7         5
         8         5
         9         6
        10         7
        11         7
        12         8
        13         9
        14        10
        15        10
        16        11
        17        12
        18        13
        19        13
        20        14
        21        14
        22        15
        23        16
        24        17
        25        17
        26        18
        27        18
        28        19
        29        20
        30        20
 
HERMITE_POLY_PHYS_TEST:
  HERMITE_POLY_PHYS evaluates the Hermite polynomial.
 
         N    X      Exact F       H(N)(X)
 
         0  5.0000   1.00000       1.00000    
         1  5.0000   10.0000       10.0000    
         2  5.0000   98.0000       98.0000    
         3  5.0000   940.000       940.000    
         4  5.0000   8812.00       8812.00    
         5  5.0000   80600.0       80600.0    
         6  5.0000   717880.       717880.    
         7  5.0000  0.621160E+07  0.621160E+07
         8  5.0000  0.520657E+09  0.520657E+08
         9  5.0000  0.421271E+09  0.421271E+09
        10  5.0000  0.327553E+10  0.327553E+10
        11  5.0000  0.243299E+11  0.243299E+11
        12  5.0000  0.171237E+12  0.171237E+12
         5  0.5000   41.0000       41.0000    
         5  1.0000  -8.00000      -8.00000    
         5  3.0000   3816.00       3816.00    
         5 10.0000  0.304120E+07  0.304120E+07
 
HERMITE_POLY_PHYS_COEF_TEST
  HERMITE_POLY_PHYS_COEF: Hermite polynomial coefficients.
 
  H( 0)
 
     1.00000    
 
  H( 1)
 
     2.00000     * x
     0.00000    
 
  H( 2)
 
     4.00000     * x** 2
     0.00000     * x
    -2.00000    
 
  H( 3)
 
     8.00000     * x** 3
     0.00000     * x** 2
    -12.0000     * x
    -0.00000    
 
  H( 4)
 
     16.0000     * x** 4
     0.00000     * x** 3
    -48.0000     * x** 2
    -0.00000     * x
     12.0000    
 
  H( 5)
 
     32.0000     * x** 5
     0.00000     * x** 4
    -160.000     * x** 3
    -0.00000     * x** 2
     120.000     * x
     0.00000    
 
I4_CHOOSE_TEST
  I4_CHOOSE evaluates C(N,K).
 
     N     K    CNK
 
         0         0         1
         1         0         1
         1         1         1
         2         0         1
         2         1         2
         2         2         1
         3         0         1
         3         1         3
         3         2         3
         3         3         1
         4         0         1
         4         1         4
         4         2         6
         4         3         4
         4         4         1
 
I4_FACTOR_TEST:
  I4_FACTOR tries to factor an I4

  Factors of N =        60
        2^   2
        3^   1
        5^   1

  Factors of N =    664048
        2^   4
        7^   3
       11^   2

  Factors of N =   8466763
     2699^   1
     3137^   1
 
I4_FACTORIAL_TEST:
  I4_FACTORIAL evaluates the factorial function.
 
     X       Exact F       I4_FACTORIAL(X)
 
     0           1           1
     1           1           1
     2           2           2
     3           6           6
     4          24          24
     5         120         120
     6         720         720
     7        5040        5040
     8       40320       40320
     9      362880      362880
    10     3628800     3628800
    11    39916800    39916800
    12   479001600   479001600
 
I4_FACTORIAL2_TEST:
  I4_FACTORIAL2 evaluates the double factorial function.
 
   N   Exact  I4_FACTORIAL2(N)
 
     0       1       1
     1       1       1
     2       2       2
     3       3       3
     4       8       8
     5      15      15
     6      48      48
     7     105     105
     8     384     384
     9     945     945
    10    3840    3840
    11   10395   10395
    12   46080   46080
    13  135135  135135
    14  645120  645120
    15 2027025 2027025

I4_IS_FIBONACCI_TEST
  I4_IS_FIBONACCI returns T or F depending on
  whether I4 is a Fibonacci number.

   I4   T/F

   -13    F
     0    F
     1    T
     8    T
    10    F
    50    F
    55    T
   100    F
   144    T
   200    F

I4_IS_PRIME_TEST
  I4_IS_PRIME reports whether an integer is prime.

  I     I4_IS_PRIME(I)

      -2  F
      -1  F
       0  F
       1  T
       2  T
       3  T
       4  F
       5  T
       6  F
       7  T
       8  F
       9  F
      10  F
      11  T
      12  F
      13  T
      14  F
      15  F
      16  F
      17  T
      18  F
      19  T
      20  F
      21  F
      22  F
      23  T
      24  F
      25  F
 
I4_IS_TRIANGULAR_TEST
  I4_IS_TRIANGULAR returns T or F depending on
  whether I is triangular.
 
     I    T/F
 
     0    T
     1    T
     2    F
     3    T
     4    F
     5    F
     6    T
     7    F
     8    F
     9    F
    10    T
    11    F
    12    F
    13    F
    14    F
    15    T
    16    F
    17    F
    18    F
    19    F
    20    F
 
I4_PARTITION_DISTINCT_COUNT_TEST:
  For the number of partitions of an integer
  into distinct parts,
  I4_PARTITION_DISTINCT_COUNT
  computes any value.
 
           N       Exact F    Q(N)
 
           0         1         1
           1         1         1
           2         1         1
           3         2         2
           4         2         2
           5         3         3
           6         4         4
           7         5         5
           8         6         6
           9         8         8
          10        10        10
          11        12        12
          12        15        15
          13        18        18
          14        22        22
          15        27        27
          16        32        32
          17        38        38
          18        46        46
          19        54        54
          20        64        64
 
I4_TO_TRIANGLE_LOWER_TEST
  I4_TO_TRIANGLE_LOWER converts a linear index to a
  lower triangular one.
 
     I  =>   J   K
 
     0       0   0
     1       1   1
     2       2   1
     3       2   2
     4       3   1
     5       3   2
     6       3   3
     7       4   1
     8       4   2
     9       4   3
    10       4   4
    11       5   1
    12       5   2
    13       5   3
    14       5   4
    15       5   5
    16       6   1
    17       6   2
    18       6   3
    19       6   4
    20       6   5
 
JACOBI_POLY_TEST:
  JACOBI_POLY computes values of 
  the Jacobi polynomial.
 
       N       A       B      X       JPV      JACOBI
 
         0    0.0000    1.0000    0.5000   1.00000       1.00000    
         1    0.0000    1.0000    0.5000  0.250000      0.250000    
         2    0.0000    1.0000    0.5000 -0.375000     -0.375000    
         3    0.0000    1.0000    0.5000 -0.484375     -0.484375    
         4    0.0000    1.0000    0.5000 -0.132812     -0.132812    
         5    0.0000    1.0000    0.5000  0.275391      0.275391    
         5    1.0000    1.0000    0.5000 -0.164062     -0.164062    
         5    2.0000    1.0000    0.5000  -1.17480      -1.17480    
         5    3.0000    1.0000    0.5000  -2.36133      -2.36133    
         5    4.0000    1.0000    0.5000  -2.61621      -2.61621    
         5    5.0000    1.0000    0.5000  0.117188      0.117188    
         5    0.0000    2.0000    0.5000  0.421875      0.421875    
         5    0.0000    3.0000    0.5000  0.504883      0.504883    
         5    0.0000    4.0000    0.5000  0.509766      0.509766    
         5    0.0000    5.0000    0.5000  0.430664      0.430664    
         5    0.0000    1.0000   -1.0000  -6.00000      -6.00000    
         5    0.0000    1.0000   -0.8000  0.386200E-01  0.386200E-01
         5    0.0000    1.0000   -0.6000  0.811840      0.811840    
         5    0.0000    1.0000   -0.4000  0.366600E-01  0.366600E-01
         5    0.0000    1.0000   -0.2000 -0.485120     -0.485120    
         5    0.0000    1.0000    0.0000 -0.312500     -0.312500    
         5    0.0000    1.0000    0.2000  0.189120      0.189120    
         5    0.0000    1.0000    0.4000  0.402340      0.402340    
         5    0.0000    1.0000    0.6000  0.121600E-01  0.121600E-01
         5    0.0000    1.0000    0.8000 -0.439620     -0.439620    
         5    0.0000    1.0000    1.0000   1.00000       1.00000    
 
JACOBI_SYMBOL_TEST
  JACOBI_SYMBOL computes the Jacobi symbol
  (Q/P), which records if Q is a quadratic 
  residue modulo the number P.
 
  Jacobi Symbols for P =        3
 
         3       0       0
         3       1       1
         3       2      -1
         3       3       0
 
  Jacobi Symbols for P =        9
 
         9       0       0
         9       1       1
         9       2       1
         9       3       0
         9       4       1
         9       5       1
         9       6       0
         9       7       1
         9       8       1
         9       9       0
 
  Jacobi Symbols for P =       10
 
        10       0       0
        10       1       1
        10       2       0
        10       3      -1
        10       4       0
        10       5       0
        10       6       0
        10       7      -1
        10       8       0
        10       9       1
        10      10       0
 
  Jacobi Symbols for P =       12
 
        12       0       0
        12       1       1
        12       2       0
        12       3       0
        12       4       0
        12       5      -1
        12       6       0
        12       7       1
        12       8       0
        12       9       0
        12      10       0
        12      11      -1
        12      12       0
 
KRAWTCHOUK_TEST:
  KRAWTCHOUK evaluates Krawtchouk polynomials.
 
         N      P         X           M      K(N,P,X,M)
 
 
         0    0.2500    0.0000         5     1.00000    
         1    0.2500    0.0000         5    -1.25000    
         2    0.2500    0.0000         5    0.625000    
         3    0.2500    0.0000         5   -0.156250    
         4    0.2500    0.0000         5    0.195312E-01
         5    0.2500    0.0000         5   -0.976562E-03
 
         0    0.2500    0.5000         5     1.00000    
         1    0.2500    0.5000         5   -0.750000    
         2    0.2500    0.5000         5     0.00000    
         3    0.2500    0.5000         5    0.187500    
         4    0.2500    0.5000         5   -0.105469    
         5    0.2500    0.5000         5    0.439453E-01
 
         0    0.2500    1.0000         5     1.00000    
         1    0.2500    1.0000         5   -0.250000    
         2    0.2500    1.0000         5   -0.375000    
         3    0.2500    1.0000         5    0.218750    
         4    0.2500    1.0000         5   -0.429688E-01
         5    0.2500    1.0000         5    0.292969E-02
 
         0    0.2500    1.5000         5     1.00000    
         1    0.2500    1.5000         5    0.250000    
         2    0.2500    1.5000         5   -0.500000    
         3    0.2500    1.5000         5    0.625000E-01
         4    0.2500    1.5000         5    0.507812E-01
         5    0.2500    1.5000         5   -0.224609E-01
 
         0    0.2500    2.0000         5     1.00000    
         1    0.2500    2.0000         5    0.750000    
         2    0.2500    2.0000         5   -0.375000    
         3    0.2500    2.0000         5   -0.156250    
         4    0.2500    2.0000         5    0.820312E-01
         5    0.2500    2.0000         5   -0.878906E-02
 
         0    0.2500    2.5000         5     1.00000    
         1    0.2500    2.5000         5     1.25000    
         2    0.2500    2.5000         5     0.00000    
         3    0.2500    2.5000         5   -0.312500    
         4    0.2500    2.5000         5    0.195312E-01
         5    0.2500    2.5000         5    0.205078E-01
 
         0    0.5000    0.0000         5     1.00000    
         1    0.5000    0.0000         5    -2.50000    
         2    0.5000    0.0000         5     2.50000    
         3    0.5000    0.0000         5    -1.25000    
         4    0.5000    0.0000         5    0.312500    
         5    0.5000    0.0000         5   -0.312500E-01
 
         0    0.5000    0.5000         5     1.00000    
         1    0.5000    0.5000         5    -2.00000    
         2    0.5000    0.5000         5     1.37500    
         3    0.5000    0.5000         5   -0.250000    
         4    0.5000    0.5000         5   -0.132812    
         5    0.5000    0.5000         5    0.781250E-01
 
         0    0.5000    1.0000         5     1.00000    
         1    0.5000    1.0000         5    -1.50000    
         2    0.5000    1.0000         5    0.500000    
         3    0.5000    1.0000         5    0.250000    
         4    0.5000    1.0000         5   -0.187500    
         5    0.5000    1.0000         5    0.312500E-01
 
         0    0.5000    1.5000         5     1.00000    
         1    0.5000    1.5000         5    -1.00000    
         2    0.5000    1.5000         5   -0.125000    
         3    0.5000    1.5000         5    0.375000    
         4    0.5000    1.5000         5   -0.703125E-01
         5    0.5000    1.5000         5   -0.234375E-01
 
         0    0.5000    2.0000         5     1.00000    
         1    0.5000    2.0000         5   -0.500000    
         2    0.5000    2.0000         5   -0.500000    
         3    0.5000    2.0000         5    0.250000    
         4    0.5000    2.0000         5    0.625000E-01
         5    0.5000    2.0000         5   -0.312500E-01
 
         0    0.5000    2.5000         5     1.00000    
         1    0.5000    2.5000         5     0.00000    
         2    0.5000    2.5000         5   -0.625000    
         3    0.5000    2.5000         5    -0.00000    
         4    0.5000    2.5000         5    0.117188    
         5    0.5000    2.5000         5     0.00000    
 
LAGUERRE_ASSOCIATED_TEST
  LAGUERRE_ASSOCIATED evaluates the associated Laguerre
  polynomials.
 
  Table of L(N,M)(X) for
 
  N(max) =    6
  M      =    0
  X =         0.00000    
 
         0   1.00000    
         1   1.00000    
         2   1.00000    
         3   1.00000    
         4   1.00000    
         5   1.00000    
         6   1.00000    
 
  Table of L(N,M)(X) for
 
  N(max) =    6
  M      =    0
  X =         1.00000    
 
         0   1.00000    
         1   0.00000    
         2 -0.500000    
         3 -0.666667    
         4 -0.625000    
         5 -0.466667    
         6 -0.256944    
 
  Table of L(N,M)(X) for
 
  N(max) =    6
  M      =    1
  X =         0.00000    
 
         0   1.00000    
         1   2.00000    
         2   3.00000    
         3   4.00000    
         4   5.00000    
         5   6.00000    
         6   7.00000    
 
  Table of L(N,M)(X) for
 
  N(max) =    6
  M      =    2
  X =        0.500000    
 
         0   1.00000    
         1   2.50000    
         2   4.12500    
         3   5.60417    
         4   6.75260    
         5   7.45547    
         6   7.65419    
 
  Table of L(N,M)(X) for
 
  N(max) =    6
  M      =    3
  X =        0.500000    
 
         0   1.00000    
         1   3.50000    
         2   7.62500    
         3   13.2292    
         4   19.9818    
         5   27.4372    
         6   35.0914    
 
  Table of L(N,M)(X) for
 
  N(max) =    6
  M      =    1
  X =        0.500000    
 
         0   1.00000    
         1   1.50000    
         2   1.62500    
         3   1.47917    
         4   1.14844    
         5  0.702865    
         6  0.198720    
 
LAGUERRE_POLY_TEST:
  LAGUERRE_POLY evaluates the Laguerre polynomial.
 
         N    X      Exact F       L(N)(X)
 
         0  1.0000   1.00000       1.00000    
         1  1.0000   0.00000       0.00000    
         2  1.0000 -0.500000     -0.500000    
         3  1.0000 -0.666667     -0.666667    
         4  1.0000 -0.625000     -0.625000    
         5  1.0000 -0.466667     -0.466667    
         6  1.0000 -0.256944     -0.256944    
         7  1.0000 -0.404762E-01 -0.404762E-01
         8  1.0000  0.153993      0.153993    
         9  1.0000  0.309744      0.309744    
        10  1.0000  0.418946      0.418946    
        11  1.0000  0.480134      0.480134    
        12  1.0000  0.496212      0.496212    
         5  0.5000 -0.445573     -0.445573    
         5  3.0000  0.850000      0.850000    
         5  5.0000  -3.16667      -3.16667    
         5 10.0000   34.3333       34.3333    
 
LAGUERRE_POLY_COEF_TEST
  LAGUERRE_POLY_COEF determines the Laguerre polynomial coefficients.
 
  L( 0)
 
     1.00000    
 
  L( 1)
 
    -1.00000     * x
     1.00000    
 
  L( 2)
 
    0.500000     * x** 2
    -2.00000     * x
     1.00000    
 
  L( 3)
 
   -0.166667     * x** 3
     1.50000     * x** 2
    -3.00000     * x
     1.00000    
 
  L( 4)
 
    0.416667E-01 * x** 4
   -0.666667     * x** 3
     3.00000     * x** 2
    -4.00000     * x
     1.00000    
 
  L( 5)
 
   -0.833333E-02 * x** 5
    0.208333     * x** 4
    -1.66667     * x** 3
     5.00000     * x** 2
    -5.00000     * x
     1.00000    
 
  Factorially scaled L( 0)
 
     1.00000    
 
  Factorially scaled L( 1)
 
    -1.00000     * x
     1.00000    
 
  Factorially scaled L( 2)
 
     1.00000     * x** 2
    -4.00000     * x
     2.00000    
 
  Factorially scaled L( 3)
 
    -1.00000     * x** 3
     9.00000     * x** 2
    -18.0000     * x
     6.00000    
 
  Factorially scaled L( 4)
 
     1.00000     * x** 4
    -16.0000     * x** 3
     72.0000     * x** 2
    -96.0000     * x
     24.0000    
 
  Factorially scaled L( 5)
 
    -1.00000     * x** 5
     25.0000     * x** 4
    -200.000     * x** 3
     600.000     * x** 2
    -600.000     * x
     120.000    
 
LAMBERT_W_TEST:
  LAMBERT_W estimates the Lambert W function.
 
           X           W(X)        W(X)         W(X)
                   Tabulated   Estimate
 
     0.00000         0.00000        0.145313E-13
    0.500000        0.351734        0.351734    
     1.00000        0.567143        0.567143    
     1.50000        0.725861        0.725861    
     2.00000        0.852606        0.852606    
     2.50000        0.958586        0.958586    
     2.71828         1.00000         1.00000    
     3.00000         1.04991         1.04991    
     3.50000         1.13029         1.13029    
     4.00000         1.20217         1.20217    
     4.50000         1.26724         1.26724    
     5.00000         1.32672         1.32672    
     5.50000         1.38155         1.38155    
     6.00000         1.43240         1.43240    
     6.50000         1.47986         1.47986    
     7.00000         1.52435         1.52435    
     7.50000         1.56623         1.56623    
     8.00000         1.60581         1.60581    
     10.0000         1.74553         1.74553    
     100.000         3.38563         3.38563    
     1000.00         5.24960         5.24960    
    0.100000E+07     11.3834         11.3834    
 
LAMBERT_W_CRUDE_TEST:
  LAMBERT_W_CRUDE makes a crude estimate of the
  Lambert W function.
 
           X           W(X)        W(X)
                   Tabulated       Crude
 
     0.00000         0.00000        0.400000E-01
    0.500000        0.351734        0.311766    
     1.00000        0.567143        0.507173    
     1.50000        0.725861        0.660221    
     2.00000        0.852606        0.786228    
     2.50000        0.958586        0.893439    
     2.71828         1.00000        0.935684    
     3.00000         1.04991        0.986807    
     3.50000         1.13029         1.06955    
     4.00000         1.20217         1.14387    
     4.50000         1.26724         1.21134    
     5.00000         1.32672         1.27315    
     5.50000         1.38155         1.33018    
     6.00000         1.43240         1.38313    
     6.50000         1.47986         1.43256    
     7.00000         1.52435         1.47890    
     7.50000         1.56623         1.52253    
     8.00000         1.60581         1.56376    
     10.0000         1.74553         1.70916    
     100.000         3.38563         3.38525    
     1000.00         5.24960         5.25088    
    0.100000E+07     11.3834         11.3798    
 
LEGENDRE_ASSOCIATED_TEST:
  LEGENDRE_ASSOCIATED evaluates associated Legendre functions.
 
       N       M    X     Exact F       PNM(X)
 
         1         0  0.0000   0.00000       0.00000    
         1         0  0.5000  0.500000      0.500000    
         1         0  0.7071  0.707107      0.707107    
         1         0  1.0000   1.00000       1.00000    
         1         1  0.5000 -0.866025     -0.866025    
         2         0  0.5000 -0.125000     -0.125000    
         2         1  0.5000  -1.29904      -1.29904    
         2         2  0.5000   2.25000       2.25000    
         3         0  0.5000 -0.437500     -0.437500    
         3         1  0.5000 -0.324759     -0.324760    
         3         2  0.5000   5.62500       5.62500    
         3         3  0.5000  -9.74278      -9.74279    
         4         2  0.5000   4.21875       4.21875    
         5         2  0.5000  -4.92187      -4.92188    
         6         3  0.5000   12.7874       12.7874    
         7         3  0.5000   116.685       116.685    
         8         4  0.5000  -1050.67      -1050.67    
         9         4  0.5000  -2078.49      -2078.49    
        10         5  0.5000   30086.2       30086.2    
 
LEGENDRE_ASSOCIATED_NORMALIZED_TEST:
  LEGENDRE_ASSOCIATED_NORMALIZED evaluates associated Legendre functions.
 
       N       M    X     Exact F       PNM(X)
 
         0         0  0.5000  0.282095      0.282095    
         1         0  0.5000  0.244301      0.244301    
         1         1  0.5000 -0.299207     -0.299207    
         2         0  0.5000 -0.788479E-01 -0.788479E-01
         2         1  0.5000 -0.334523     -0.334523    
         2         2  0.5000  0.289706      0.289706    
         3         0  0.5000 -0.326529     -0.326529    
         3         1  0.5000 -0.699706E-01 -0.699706E-01
         3         2  0.5000  0.383245      0.383245    
         3         3  0.5000 -0.270995     -0.270995    
         4         0  0.5000 -0.244629     -0.244629    
         4         1  0.5000  0.256066      0.256066    
         4         2  0.5000  0.188169      0.188169    
         4         3  0.5000 -0.406492     -0.406492    
         4         4  0.5000  0.248925      0.248925    
         5         0  0.5000  0.840580E-01  0.840580E-01
         5         1  0.5000  0.329379      0.329379    
         5         2  0.5000 -0.158885     -0.158885    
         5         3  0.5000 -0.280871     -0.280871    
         5         4  0.5000  0.412795      0.412795    
         5         5  0.5000 -0.226097     -0.226097    
 
LEGENDRE_FUNCTION_Q_TEST:
  LEGENDRE_FUNCTION_Q evaluates the Legendre Q function.
 
         N    X      Exact F       Q(N)(X)
 
         0  0.0000   0.00000       0.00000    
         1  0.0000  -1.00000      -1.00000    
         2  0.0000   0.00000      -0.00000    
         3  0.0000  0.666667      0.666667    
         9  0.0000 -0.406349     -0.406349    
        10  0.0000   0.00000      -0.00000    
         0  0.5000  0.549306      0.549306    
         1  0.5000 -0.725347     -0.725347    
         2  0.5000 -0.818663     -0.818663    
         3  0.5000 -0.198655     -0.198655    
         9  0.5000 -0.116163     -0.116163    
        10  0.5000  0.291658      0.291658    
 
LEGENDRE_POLY_TEST:
  LEGENDRE_POLY evaluates the Legendre PN function.
 
         N    X      Exact F       P(N)(X)
 
         0  0.2500   1.00000       1.00000    
         1  0.2500  0.250000      0.250000    
         2  0.2500 -0.406250     -0.406250    
         3  0.2500 -0.335938     -0.335938    
         4  0.2500  0.157715      0.157715    
         5  0.2500  0.339722      0.339722    
         6  0.2500  0.242767E-01  0.242767E-01
         7  0.2500 -0.279919     -0.279919    
         8  0.2500 -0.152454     -0.152454    
         9  0.2500  0.176824      0.176824    
        10  0.2500  0.221200      0.221200    
         3  0.0000   0.00000      -0.00000    
         3  0.1000 -0.147500     -0.147500    
         3  0.2000 -0.280000     -0.280000    
         3  0.3000 -0.382500     -0.382500    
         3  0.4000 -0.440000     -0.440000    
         3  0.5000 -0.437500     -0.437500    
         3  0.6000 -0.360000     -0.360000    
         3  0.7000 -0.192500     -0.192500    
         3  0.8000  0.800000E-01  0.800000E-01
         3  0.9000  0.472500      0.472500    
         3  1.0000   1.00000       1.00000    
 
LEGENDRE_POLY_COEF_TEST
  LEGENDRE_POLY_COEF returns Legendre polynomial coefficients.
 
  P( 0)
 
     1.00000    
 
  P( 1)
 
     1.00000     * x
     0.00000    
 
  P( 2)
 
     1.50000     * x** 2
     0.00000     * x
   -0.500000    
 
  P( 3)
 
     2.50000     * x** 3
     0.00000     * x** 2
    -1.50000     * x
    -0.00000    
 
  P( 4)
 
     4.37500     * x** 4
     0.00000     * x** 3
    -3.75000     * x** 2
    -0.00000     * x
    0.375000    
 
  P( 5)
 
     7.87500     * x** 5
     0.00000     * x** 4
    -8.75000     * x** 3
    -0.00000     * x** 2
     1.87500     * x
     0.00000    
 
LEGENDRE_SYMBOL_TEST
  LEGENDRE_SYMBOL computes the Legendre
  symbol (Q/P) which records whether Q is 
  a quadratic residue modulo the prime P.
 
  Legendre Symbols for P =        7
 
         7       0       0
         7       1       1
         7       2       1
         7       3       1
         7       4       1
         7       5      -1
         7       6       1
         7       7       0
 
  Legendre Symbols for P =       11
 
        11       0       0
        11       1       1
        11       2      -1
        11       3      -1
        11       4       1
        11       5       1
        11       6       1
        11       7       1
        11       8      -1
        11       9       1
        11      10      -1
        11      11       0
 
  Legendre Symbols for P =       13
 
        13       0       0
        13       1       1
        13       2      -1
        13       3       1
        13       4       1
        13       5      -1
        13       6      -1
        13       7       1
        13       8      -1
        13       9       1
        13      10       1
        13      11      -1
        13      12       1
        13      13       0
 
  Legendre Symbols for P =       17
 
        17       0       0
        17       1       1
        17       2       1
        17       3      -1
        17       4       1
        17       5      -1
        17       6      -1
        17       7       1
        17       8       1
        17       9       1
        17      10      -1
        17      11       1
        17      12      -1
        17      13       1
        17      14       1
        17      15       1
        17      16       1
        17      17       0
 
LERCH_TEST
  LERCH computes the Lerch function.
 
       Z       S       A         Lerch           Lerch
                             Tabulated        Computed
 
    1.0000     2    0.0000     1.64493         1.64492    
    1.0000     3    0.0000     1.20206         1.20206    
    1.0000    10    0.0000     1.00099         1.00099    
    0.5000     2    1.0000     1.16448         1.16448    
    0.5000     3    1.0000     1.07443         1.07443    
    0.5000    10    1.0000     1.00049         1.00049    
    0.3333     2    2.0000    0.295919        0.295919    
    0.3333     3    2.0000    0.139451        0.139451    
    0.3333    10    2.0000    0.982318E-03    0.982318E-03
    0.1000     2    3.0000    0.117791        0.117791    
    0.1000     3    3.0000    0.386845E-01    0.386845E-01
    0.1000    10    3.0000    0.170315E-04    0.170315E-04
 
LOCK_TEST
  LOCK counts the combinations on a button lock.
 
         I      LOCK(I)
 
         0           1
         1           1
         2           3
         3          13
         4          75
         5         541
         6        4683
         7       47293
         8      545835
         9     7087261
        10   102247563
 
MEIXNER_TEST:
  MEIXNER evaluates Meixner polynomials.
 
       N      BETA         C         X        M(N,BETA,C,X)
 
         0    0.5000    0.1250    0.0000     1.00000    
         1    0.5000    0.1250    0.0000     1.00000    
         2    0.5000    0.1250    0.0000    0.125000    
         3    0.5000    0.1250    0.0000   -0.684375    
         4    0.5000    0.1250    0.0000   -0.779297    
         5    0.5000    0.1250    0.0000   -0.181787    
 
         0    0.5000    0.1250    0.5000     1.00000    
         1    0.5000    0.1250    0.5000    -6.00000    
         2    0.5000    0.1250    0.5000    -3.66667    
         3    0.5000    0.1250    0.5000     2.05000    
         4    0.5000    0.1250    0.5000     4.90000    
         5    0.5000    0.1250    0.5000     2.66944    
 
         0    0.5000    0.1250    1.0000     1.00000    
         1    0.5000    0.1250    1.0000    -13.0000    
         2    0.5000    0.1250    1.0000    -3.37500    
         3    0.5000    0.1250    1.0000     8.45937    
         4    0.5000    0.1250    1.0000     9.08633    
         5    0.5000    0.1250    1.0000   -0.737033E-01
 
         0    0.5000    0.1250    1.5000     1.00000    
         1    0.5000    0.1250    1.5000    -20.0000    
         2    0.5000    0.1250    1.5000     1.00000    
         3    0.5000    0.1250    1.5000     16.4000    
         4    0.5000    0.1250    1.5000     9.10000    
         5    0.5000    0.1250    1.5000    -8.00556    
 
         0    0.5000    0.1250    2.0000     1.00000    
         1    0.5000    0.1250    2.0000    -27.0000    
         2    0.5000    0.1250    2.0000     9.45833    
         3    0.5000    0.1250    2.0000     23.7281    
         4    0.5000    0.1250    2.0000     3.33320    
         5    0.5000    0.1250    2.0000    -19.0084    
 
         0    0.5000    0.1250    2.5000     1.00000    
         1    0.5000    0.1250    2.5000    -34.0000    
         2    0.5000    0.1250    2.5000     22.0000    
         3    0.5000    0.1250    2.5000     28.3000    
         4    0.5000    0.1250    2.5000    -8.75000    
         5    0.5000    0.1250    2.5000    -29.7736    
 
         0    1.0000    0.2500    0.0000     1.00000    
         1    1.0000    0.2500    0.0000     1.00000    
         2    1.0000    0.2500    0.0000    0.250000    
         3    1.0000    0.2500    0.0000   -0.437500    
         4    1.0000    0.2500    0.0000   -0.625000    
         5    1.0000    0.2500    0.0000   -0.306250    
 
         0    1.0000    0.2500    0.5000     1.00000    
         1    1.0000    0.2500    0.5000   -0.500000    
         2    1.0000    0.2500    0.5000   -0.781250    
         3    1.0000    0.2500    0.5000   -0.285156    
         4    1.0000    0.2500    0.5000    0.327515    
         5    1.0000    0.2500    0.5000    0.547452    
 
         0    1.0000    0.2500    1.0000     1.00000    
         1    1.0000    0.2500    1.0000    -2.00000    
         2    1.0000    0.2500    1.0000    -1.25000    
         3    1.0000    0.2500    1.0000    0.500000    
         4    1.0000    0.2500    1.0000     1.34375    
         5    1.0000    0.2500    1.0000    0.809375    
 
         0    1.0000    0.2500    1.5000     1.00000    
         1    1.0000    0.2500    1.5000    -3.50000    
         2    1.0000    0.2500    1.5000    -1.15625    
         3    1.0000    0.2500    1.5000     1.70703    
         4    1.0000    0.2500    1.5000     2.09412    
         5    1.0000    0.2500    1.5000    0.362021    
 
         0    1.0000    0.2500    2.0000     1.00000    
         1    1.0000    0.2500    2.0000    -5.00000    
         2    1.0000    0.2500    2.0000   -0.500000    
         3    1.0000    0.2500    2.0000     3.12500    
         4    1.0000    0.2500    2.0000     2.32812    
         5    1.0000    0.2500    2.0000   -0.753906    
 
         0    1.0000    0.2500    2.5000     1.00000    
         1    1.0000    0.2500    2.5000    -6.50000    
         2    1.0000    0.2500    2.5000    0.718750    
         3    1.0000    0.2500    2.5000     4.54297    
         4    1.0000    0.2500    2.5000     1.87439    
         5    1.0000    0.2500    2.5000    -2.36916    
 
         0    2.0000    0.5000    0.0000     1.00000    
         1    2.0000    0.5000    0.0000     1.00000    
         2    2.0000    0.5000    0.0000    0.500000    
         3    2.0000    0.5000    0.0000     0.00000    
         4    2.0000    0.5000    0.0000   -0.300000    
         5    2.0000    0.5000    0.0000   -0.350000    
 
         0    2.0000    0.5000    0.5000     1.00000    
         1    2.0000    0.5000    0.5000    0.750000    
         2    2.0000    0.5000    0.5000    0.229167    
         3    2.0000    0.5000    0.5000   -0.160156    
         4    2.0000    0.5000    0.5000   -0.305664    
         5    2.0000    0.5000    0.5000   -0.237101    
 
         0    2.0000    0.5000    1.0000     1.00000    
         1    2.0000    0.5000    1.0000    0.500000    
         2    2.0000    0.5000    1.0000     0.00000    
         3    2.0000    0.5000    1.0000   -0.250000    
         4    2.0000    0.5000    1.0000   -0.250000    
         5    2.0000    0.5000    1.0000   -0.104167    
 
         0    2.0000    0.5000    1.5000     1.00000    
         1    2.0000    0.5000    1.5000    0.250000    
         2    2.0000    0.5000    1.5000   -0.187500    
         3    2.0000    0.5000    1.5000   -0.277344    
         4    2.0000    0.5000    1.5000   -0.150977    
         5    2.0000    0.5000    1.5000    0.276286E-01
 
         0    2.0000    0.5000    2.0000     1.00000    
         1    2.0000    0.5000    2.0000     0.00000    
         2    2.0000    0.5000    2.0000   -0.333333    
         3    2.0000    0.5000    2.0000   -0.250000    
         4    2.0000    0.5000    2.0000   -0.250000E-01
         5    2.0000    0.5000    2.0000    0.141667    
 
         0    2.0000    0.5000    2.5000     1.00000    
         1    2.0000    0.5000    2.5000   -0.250000    
         2    2.0000    0.5000    2.5000   -0.437500    
         3    2.0000    0.5000    2.5000   -0.175781    
         4    2.0000    0.5000    2.5000    0.113086    
         5    2.0000    0.5000    2.5000    0.225562    
 
MERTENS_TEST
  MERTENS computes the Mertens function.
 
         N     Exact   MERTENS(N)
 
         1           1           1
         2           0           0
         3          -1          -1
         4          -1          -1
         5          -2          -2
         6          -1          -1
         7          -2          -2
         8          -2          -2
         9          -2          -2
        10          -1          -1
        11          -2          -2
        12          -2          -2
       100           1           1
      1000           2           2
     10000         -23         -23
 
MOEBIUS_TEST
  MOEBIUS computes the Moebius function.
 
         N     Exact   MOEBIUS(N)
 
         1           1           1
         2          -1          -1
         3          -1          -1
         4           0           0
         5          -1          -1
         6           1           1
         7          -1          -1
         8           0           0
         9           0           0
        10           1           1
        11          -1          -1
        12           0           0
        13          -1          -1
        14           1           1
        15           1           1
        16           0           0
        17          -1          -1
        18           0           0
        19          -1          -1
        20           0           0
 
MOTZKIN_TEST
  MOTZKIN computes the Motzkin numbers A(0:N).
  A(N) counts the paths from (0,0) to (N,0).
 
         I         A(I)
 
         0           1
         1           1
         2           2
         3           4
         4           9
         5          21
         6          51
         7         127
         8         323
         9         835
        10        2188
 
NORMAL_01_CDF_INVERSE_TEST:
  NORMAL_01_CDF_INVERSE inverts the error function.
 
    FX            X    NORMAL_01_CDF_INVERSE(FX)
 
    0.5000   0.00000       0.00000    
    0.5398  0.100000      0.100000    
    0.5793  0.200000      0.200000    
    0.6179  0.300000      0.300000    
    0.6554  0.400000      0.400000    
    0.6915  0.500000      0.500000    
    0.7257  0.600000      0.600000    
    0.7580  0.700000      0.700000    
    0.7881  0.800000      0.800000    
    0.8159  0.900000      0.900000    
    0.8413   1.00000       1.00000    
    0.9332   1.50000       1.50000    
    0.9772   2.00000       2.00000    
    0.9938   2.50000       2.50000    
    0.9987   3.00000       3.00000    
    0.9998   3.50000       3.50000    
    1.0000   4.00000       4.00000    
 
OMEGA_TEST
  OMEGA counts the distinct prime divisors of an integer N.
 
             N      Exact   OMEGA(N)
 
             1           1           1
             2           1           1
             3           1           1
             4           1           1
             5           1           1
             6           2           2
             7           1           1
             8           1           1
             9           1           1
            10           2           2
            30           3           3
           101           1           1
           210           4           4
          1320           4           4
          1764           3           3
          2003           1           1
          2310           5           5
          2827           2           2
          8717           2           2
         12553           1           1
         30030           6           6
        510510           7           7
       9699690           8           8
 
PENTAGON_NUM_TEST
  PENTAGON_NUM computes the pentagonal numbers.
 
         I      Pent(I)
 
         1         1
         2         5
         3        12
         4        22
         5        35
         6        51
         7        70
         8        92
         9       117
        10       145
 
PHI_TEST
  PHI computes the PHI function.
 
     N     Exact     PHI(N)
 
         1           1           1
         2           1           1
         3           2           2
         4           2           2
         5           4           4
         6           2           2
         7           6           6
         8           4           4
         9           6           6
        10           4           4
        20           8           8
        30           8           8
        40          16          16
        50          20          20
        60          16          16
       100          40          40
       149         148         148
       500         200         200
       750         200         200
       999         648         648
 
PLANE_PARTITION_NUM_TEST
  PLANE_PARTITION_NUM computes the number of.
  plane partitions of the number N.
 
         N      P(N)
 
         1         1
         2         3
         3         6
         4        13
         5        24
         6        48
         7        86
         8       160
         9       282
        10       500
 
POLY_BERNOULLI_TEST
  POLY_BERNOULLI computes the poly-Bernoulli numbers
  of negative index, B_n^(-k)
 
     N     K    B_N^(-K)
 
 
     0     0             1
     1     0             1
     2     0             1
     3     0             1
     4     0             1
     5     0             1
     6     0             1
 
     0     1             1
     1     1             2
     2     1             4
     3     1             8
     4     1            16
     5     1            32
     6     1            64
 
     0     2             1
     1     2             4
     2     2            14
     3     2            46
     4     2           146
     5     2           454
     6     2          1394
 
     0     3             1
     1     3             8
     2     3            46
     3     3           230
     4     3          1066
     5     3          4718
     6     3         20266
 
     0     4             1
     1     4            16
     2     4           146
     3     4          1066
     4     4          6902
     5     4         41506
     6     4        237686
 
     0     5             1
     1     5            32
     2     5           454
     3     5          4718
     4     5         41506
     5     5        329462
     6     5       2441314
 
     0     6             1
     1     6            64
     2     6          1394
     3     6         20266
     4     6        237686
     5     6       2441314
     6     6      22934774
 
POLY_COEF_COUNT_TEST
  POLY_COEF_COUNT counts the number of coefficients
  in a polynomial of degree DEGREE and dimension DIM
 
 Dimension    Degree     Count
 
         1         0         1
         1         1         2
         1         2         3
         1         3         4
         1         4         5
         1         5         6
 
         4         0         1
         4         1         5
         4         2        15
         4         3        35
         4         4        70
         4         5       126
 
         7         0         1
         7         1         8
         7         2        36
         7         3       120
         7         4       330
         7         5       792
 
        10         0         1
        10         1        11
        10         2        66
        10         3       286
        10         4      1001
        10         5      3003

PRIME_TEST
  PRIME returns primes from a table.

  Number of primes stored is   1600

     I    Prime(I)

       1       2
       2       3
       3       5
       4       7
       5      11
       6      13
       7      17
       8      19
       9      23
      10      29

    1590   13411
    1591   13417
    1592   13421
    1593   13441
    1594   13451
    1595   13457
    1596   13463
    1597   13469
    1598   13477
    1599   13487
    1600   13499
 
PYRAMID_NUM_TEST
  PYRAMID_NUM computes the pyramidal numbers.
 
         I    PYR(I)
 
         1         1
         2         4
         3        10
         4        20
         5        35
         6        56
         7        84
         8       120
         9       165
        10       220
 
PYRAMID_SQUARE_NUM_TEST
  PYRAMID_SQUARE_NUM computes the pyramidal square numbers.
 
         I    PYR(I)
 
         1         1
         2         5
         3        14
         4        30
         5        55
         6        91
         7       140
         8       204
         9       285
        10       385
 
R8_AGM_TEST
  R8_AGM computes the arithmetic geometric mean.
 
      A           B             AGM                       AGM                   Diff
                               (Tabulated)             R8_AGM(A,B)
 
   22.000000   96.000000     52.27464119870424         52.27464119870424      0.7105E-14
   83.000000   56.000000     68.83653005985852         68.83653005985852       0.000    
   42.000000    7.000000     20.65930119673401         20.65930119673401      0.3553E-14
   26.000000   11.000000     17.69685487374365         17.69685487374367      0.1776E-13
    4.000000   63.000000     23.86704972175330         23.86704972175330      0.3553E-14
    6.000000   45.000000     20.71701598280599         20.71701598280599      0.3553E-14
   40.000000   75.000000     56.12784225561668         56.12784225561668       0.000    
   80.000000    0.000000     0.000000000000000         0.000000000000000       0.000    
   90.000000   35.000000     59.26956508122964         59.26956508122989      0.2487E-12
    9.000000    1.000000     3.936235503649555         3.936235503649556      0.4441E-15
   53.000000   53.000000     53.00000000000000         53.00000000000000       0.000    
    1.000000    2.000000     1.456791031046907         1.456791031046907       0.000    
    1.000000    4.000000     2.243028580287603         2.243028580287603       0.000    
    1.000000    8.000000     3.615756177597363         3.615756177597363       0.000    
    1.500000    8.000000     4.081692408022163         4.081692408022163       0.000    
 
R8_BETA_TEST:
  R8_BETA evaluates the Beta function.
 
     X      Y        Exact F       R8_BETA(X,Y)
 
    0.2000  1.0000   5.00000       5.00000    
    0.4000  1.0000   2.50000       2.50000    
    0.6000  1.0000   1.66667       1.66667    
    0.8000  1.0000   1.25000       1.25000    
    1.0000  0.2000   5.00000       5.00000    
    1.0000  0.4000   2.50000       2.50000    
    1.0000  1.0000   1.00000       1.00000    
    2.0000  2.0000  0.166667      0.166667    
    3.0000  3.0000  0.333333E-01  0.333333E-01
    4.0000  4.0000  0.714286E-02  0.714286E-02
    5.0000  5.0000  0.158730E-02  0.158730E-02
    6.0000  2.0000  0.238095E-01  0.238095E-01
    6.0000  3.0000  0.595238E-02  0.595238E-02
    6.0000  4.0000  0.198413E-02  0.198413E-02
    6.0000  5.0000  0.793651E-03  0.793651E-03
    6.0000  6.0000  0.360750E-03  0.360750E-03
    7.0000  7.0000  0.832501E-04  0.832501E-04
 
R8_CHOOSE_TEST
  R8_CHOOSE evaluates C(N,K).
 
     N       K      CNK
 
         0         0     1.00000    
         1         0     1.00000    
         1         1     1.00000    
         2         0     1.00000    
         2         1     2.00000    
         2         2     1.00000    
         3         0     1.00000    
         3         1     3.00000    
         3         2     3.00000    
         3         3     1.00000    
         4         0     1.00000    
         4         1     4.00000    
         4         2     6.00000    
         4         3     4.00000    
         4         4     1.00000    

r8_cube_root_test():
  r8_cube_root() computes the cube root of an R8.

       X               Y               Y^3

     5.62138         1.77806         5.62138    
   -0.439132       -0.760090       -0.439132    
    -2.08841        -1.27822        -2.08841    
     1.03025         1.00998         1.03025    
     4.05339         1.59443         4.05339    
    0.623532        0.854318        0.623532    
    -4.41797        -1.64087        -4.41797    
    -6.41473        -1.85806        -6.41473    
     1.73380         1.20134         1.73380    
    -5.08744        -1.71989        -5.08744    
 
R8_ERF_TEST:
  R8_ERF evaluates the error function.
 
     X      Exact F       R8_ERF(X)
 
    0.0000   0.00000       0.00000    
    0.1000  0.112463      0.112463    
    0.2000  0.222703      0.222703    
    0.3000  0.328627      0.328627    
    0.4000  0.428392      0.428392    
    0.5000  0.520500      0.520500    
    0.6000  0.603856      0.603856    
    0.7000  0.677801      0.677801    
    0.8000  0.742101      0.742101    
    0.9000  0.796908      0.796908    
    1.0000  0.842701      0.842701    
    1.1000  0.880205      0.880205    
    1.2000  0.910314      0.910314    
    1.3000  0.934008      0.934008    
    1.4000  0.952285      0.952285    
    1.5000  0.966105      0.966105    
    1.6000  0.976348      0.976348    
    1.7000  0.983790      0.983790    
    1.8000  0.989091      0.989091    
    1.9000  0.992790      0.992790    
    2.0000  0.995322      0.995322    
 
R8_ERF_INVERSE_TEST:
  R8_ERF_INVERSE inverts the error function.
 
    FX            X    R8_ERF_INVERSE(FX)
 
    0.0000   0.00000       0.00000    
    0.1125  0.100000      0.100000    
    0.2227  0.200000      0.200000    
    0.3286  0.300000      0.300000    
    0.4284  0.400000      0.400000    
    0.5205  0.500000      0.500000    
    0.6039  0.600000      0.600000    
    0.6778  0.700000      0.700000    
    0.7421  0.800000      0.800000    
    0.7969  0.900000      0.900000    
    0.8427   1.00000       1.00000    
    0.8802   1.10000       1.10000    
    0.9103   1.20000       1.20000    
    0.9340   1.30000       1.30000    
    0.9523   1.40000       1.40000    
    0.9661   1.50000       1.50000    
    0.9763   1.60000       1.60000    
    0.9838   1.70000       1.70000    
    0.9891   1.80000       1.80000    
    0.9928   1.90000       1.90000    
    0.9953   2.00000       2.00000    

R8_EULER_CONSTANT_TEST:
  R8_EULER_CONSTANT returns the Euler-Mascheroni constant
  sometimes denoted by "gamma".

  gamma = limit ( N -> oo ) ( sum ( 1 <= I <= N ) 1 / I ) - log ( N )

  Numerically, g =   0.5772156649015329    

         N      Partial Sum    |gamma - partial sum|

         1     1.00000        0.422784    
         2    0.806853        0.229637    
         4    0.697039        0.119823    
         8    0.638416        0.611999E-01
        16    0.608140        0.309246E-01
        32    0.592759        0.155436E-01
        64    0.585008        0.779216E-02
       128    0.581117        0.390116E-02
       256    0.579168        0.195185E-02
       512    0.578192        0.976245E-03
      1024    0.577704        0.488202E-03
      2048    0.577460        0.244121E-03
      4096    0.577338        0.122065E-03
      8192    0.577277        0.610339E-04
     16384    0.577246        0.305173E-04
     32768    0.577231        0.152587E-04
     65536    0.577223        0.762938E-05
    131072    0.577219        0.381469E-05
    262144    0.577218        0.190735E-05
    524288    0.577217        0.953674E-06
   1048576    0.577216        0.476837E-06
 
R8_FACTORIAL_TEST:
  R8_FACTORIAL evaluates the factorial function.
 
     N       Exact F       R8_FACTORIAL(N)
 
     0   1.00000       1.00000    
     1   1.00000       1.00000    
     2   2.00000       2.00000    
     3   6.00000       6.00000    
     4   24.0000       24.0000    
     5   120.000       120.000    
     6   720.000       720.000    
     7   5040.00       5040.00    
     8   40320.0       40320.0    
     9   362880.       362880.    
    10  0.362880E+07  0.362880E+07
    11  0.399168E+08  0.399168E+08
    12  0.479002E+09  0.479002E+09
    13  0.622702E+10  0.622702E+10
    14  0.871783E+11  0.871783E+11
    15  0.130767E+13  0.130767E+13
    16  0.209228E+14  0.209228E+14
    17  0.355687E+15  0.355687E+15
    18  0.640237E+16  0.640237E+16
    19  0.121645E+18  0.121645E+18
    20  0.243290E+19  0.243290E+19
    25  0.155112E+26  0.155112E+26
    30  0.265253E+33  0.265253E+33
 
R8_FACTORIAL_LOG_TEST:
  R8_FACTORIAL_LOG evaluates the logarithm of the 
  factorial function.
 
     N	   Exact F	 R8_FACTORIAL_LOG(N)
 
         0     0.00000         0.00000    
         1     0.00000         0.00000    
         2    0.693147        0.693147    
         3     1.79176         1.79176    
         4     3.17805         3.17805    
         5     4.78749         4.78749    
         6     6.57925         6.57925    
         7     8.52516         8.52516    
         8     10.6046         10.6046    
         9     12.8018         12.8018    
        10     15.1044         15.1044    
        11     17.5023         17.5023    
        12     19.9872         19.9872    
        13     22.5522         22.5522    
        14     25.1912         25.1912    
        15     27.8993         27.8993    
        16     30.6719         30.6719    
        17     33.5051         33.5051    
        18     36.3954         36.3954    
        19     39.3399         39.3399    
        20     42.3356         42.3356    
        25     58.0036         58.0036    
        50     148.478         148.478    
       100     363.739         363.739    
       150     605.020         605.020    
       500     2611.33         2611.33    
      1000     5912.13         5912.13    
 
R8_HYPER_2F1_TEST:
  R8_HYPER_2F1 evaluates the hypergeometric 2F1 function.
 
      A       B       C       X       2F1                       2F1                     DIFF
                                     (tabulated)               (computed)
 
   -2.50    3.30    6.70    0.25    0.7235612934899779        0.7235612934899781      0.2220E-15
   -0.50    1.10    6.70    0.25    0.9791110934527796        0.9791110934527797      0.1110E-15
    0.50    1.10    6.70    0.25     1.021657814008856         1.021657814008856       0.000    
    2.50    3.30    6.70    0.25     1.405156320011213         1.405156320011212      0.4441E-15
   -2.50    3.30    6.70    0.55    0.4696143163982161        0.4696143163982162      0.5551E-16
   -0.50    1.10    6.70    0.55    0.9529619497744632        0.9529619497744636      0.3331E-15
    0.50    1.10    6.70    0.55     1.051281421394799         1.051281421394798      0.8882E-15
    2.50    3.30    6.70    0.55     2.399906290477786         2.399906290477784      0.1776E-14
   -2.50    3.30    6.70    0.85    0.2910609592841472        0.2910609592841473      0.1665E-15
   -0.50    1.10    6.70    0.85    0.9253696791037318        0.9253696791037314      0.4441E-15
    0.50    1.10    6.70    0.85     1.086550409480700         1.086550409480699      0.2220E-15
    2.50    3.30    6.70    0.85     5.738156552618904         5.738156552618818      0.8615E-13
    3.30    6.70   -5.50    0.25     15090.66974870461         15090.66974870460      0.1091E-10
    1.10    6.70   -0.50    0.25    -104.3117006736435        -104.3117006736435      0.2842E-13
    1.10    6.70    0.50    0.25     21.17505070776881         21.17505070776880      0.1066E-13
    3.30    6.70    4.50    0.25     4.194691581903192         4.194691581903191      0.8882E-15
    3.30    6.70   -5.50    0.55     10170777974.04881         10170777974.04883      0.1144E-04
    1.10    6.70   -0.50    0.55    -24708.63532248916        -24708.63532248914      0.1819E-10
    1.10    6.70    0.50    0.55     1372.230454838499         1372.230454838497      0.2274E-11
    3.30    6.70    4.50    0.55     58.09272870639465         58.09272870639462      0.2842E-13
    3.30    6.70   -5.50    0.85    0.5868208761512417E+19    0.5868208761512405E+19  0.1229E+05
    1.10    6.70   -0.50    0.85    -446350101.4729600        -446350101.4729605      0.4768E-06
    1.10    6.70    0.50    0.85     5383505.756129573         5383505.756129580      0.6519E-08
    3.30    6.70    4.50    0.85     20396.91377601966         20396.91377601965      0.1455E-10
 
R8_PSI_TEST:
  R8_PSI evaluates the Psi function.
 
      X         Psi(X)                     Psi(X)                 DIFF
               (Tabulated)                (R8_PSI)
 
    1.0000   -0.5772156649015329       -0.5772156649015329       0.000    
    1.1000   -0.4237549404110768       -0.4237549404110768      0.5551E-16
    1.2000   -0.2890398965921883       -0.2890398965921884      0.5551E-16
    1.3000   -0.1691908888667997       -0.1691908888667995      0.1665E-15
    1.4000   -0.6138454458511615E-01   -0.6138454458511624E-01  0.9021E-16
    1.5000    0.3648997397857652E-01    0.3648997397857652E-01   0.000    
    1.6000    0.1260474527734763        0.1260474527734763      0.2776E-16
    1.7000    0.2085478748734940        0.2085478748734940      0.2776E-16
    1.8000    0.2849914332938615        0.2849914332938615       0.000    
    1.9000    0.3561841611640597        0.3561841611640596      0.1110E-15
    2.0000    0.4227843350984671        0.4227843350984672      0.1110E-15
 
R8POLY_DEGREE_TEST
  R8POLY_DEGREE determines the degree of an R8POLY.
 
  The R8POLY:
 
  p(x) =     4.00000     * x ^   3
         +   3.00000     * x ^   2
         +   2.00000     * x
         +   1.00000    
  Dimensioned degree =  3  Actual degree =  3
 
  The R8POLY:
 
  p(x) =     3.00000     * x ^   2
         +   2.00000     * x
         +   1.00000    
  Dimensioned degree =  3  Actual degree =  2
 
  The R8POLY:
 
  p(x) =     4.00000     * x ^   3
         +   2.00000     * x
         +   1.00000    
  Dimensioned degree =  3  Actual degree =  3
 
  The R8POLY:
 
  p(x) =     1.00000    
  Dimensioned degree =  3  Actual degree =  0
 
  The R8POLY:
 
  p(x) =     0.00000    
  Dimensioned degree =  3  Actual degree =  0
 
R8POLY_PRINT_TEST
  R8POLY_PRINT prints an R8poly.
 
  The R8POLY:
 
  p(x) =     9.00000     * x ^   5
         +  0.780000     * x ^   4
         +   56.0000     * x ^   2
         -   3.40000     * x
         +   12.0000    
 
R8POLY_VALUE_HORNER_TEST
  R8POLY_VALUE_HORNER evaluates a polynomial at
  one point, using Horner's method.
 
  The polynomial coefficients:
 
  p(x) =     1.00000     * x ^   4
         -   10.0000     * x ^   3
         +   35.0000     * x ^   2
         -   50.0000     * x
         +   24.0000    

   I    X    P(X)

   1    0.0000     24.0000    
   2    0.3333     10.8642    
   3    0.6667     3.45679    
   4    1.0000     0.00000    
   5    1.3333   -0.987654    
   6    1.6667   -0.691358    
   7    2.0000     0.00000    
   8    2.3333    0.493827    
   9    2.6667    0.493827    
  10    3.0000     0.00000    
  11    3.3333   -0.691358    
  12    3.6667   -0.987654    
  13    4.0000     0.00000    
  14    4.3333     3.45679    
  15    4.6667     10.8642    
  16    5.0000     24.0000    
 
SIGMA_TEST
  SIGMA computes the SIGMA function.
 
     N     Exact   SIGMA(N)
 
     1         1         1
     2         3         3
     3         4         4
     4         7         7
     5         6         6
     6        12        12
     7         8         8
     8        15        15
     9        13        13
    10        18        18
    30        72        72
   127       128       128
   128       255       255
   129       176       176
   210       576       576
   360      1170      1170
   617       618       618
   815       984       984
   816      2232      2232
  1000      2340      2340
 
SIMPLEX_NUM_TEST
  SIMPLEX_NUM computes the N-th simplex number
  in M dimensions.
 
      M: 0     1     2     3     4     5
   N
   0     1     0     0     0     0     0
   1     1     1     1     1     1     1
   2     1     2     3     4     5     6
   3     1     3     6    10    15    21
   4     1     4    10    20    35    56
   5     1     5    15    35    70   126
   6     1     6    21    56   126   252
   7     1     7    28    84   210   462
   8     1     8    36   120   330   792
   9     1     9    45   165   495  1287
  10     1    10    55   220   715  2002
 
SIN_POWER_INT_TEST:
  SIN_POWER_INT returns values of 
  the integral of SIN(X)^N from A to B.
 
      A         B          N      Exact           Computed
 
   10.0000   20.0000         0     10.0000         10.0000    
    0.0000    1.0000         1    0.459698        0.459698    
    0.0000    1.0000         2    0.272676        0.272676    
    0.0000    1.0000         3    0.178941        0.178941    
    0.0000    1.0000         4    0.124026        0.124026    
    0.0000    1.0000         5    0.889744E-01    0.889744E-01
    0.0000    2.0000         5    0.903931        0.903931    
    1.0000    2.0000         5    0.814957        0.814957    
    0.0000    1.0000        10    0.218875E-01    0.218875E-01
    0.0000    1.0000        11    0.170234E-01    0.170234E-01
 
SLICES_TEST:
  SLICES determines the maximum number of pieces created
  by SLICE_NUM slices in a DIM_NUM space.
 
  Slice Array:
 
  Col        1       2       3       4       5       6       7       8
  Row
 
    1:       2       3       4       5       6       7       8       9
    2:       2       4       7      11      16      22      29      37
    3:       2       4       8      15      26      42      64      93
    4:       2       4       8      16      31      57      99     163
    5:       2       4       8      16      32      63     120     219
 
SPHERICAL_HARMONIC_TEST:
  SPHERICAL_HARMONIC evaluates spherical harmonic
  functions.
 
       L       M   THETA    PHI     C              S
 
         0       0  0.5236  1.0472  0.282095       0.00000    
                                    0.282095       0.00000    
         1       0  0.5236  1.0472  0.423142       0.00000    
                                    0.423142       0.00000    
         2       1  0.5236  1.0472 -0.167262     -0.289706    
                                   -0.167262     -0.289706    
         3       2  0.5236  1.0472 -0.110633      0.191622    
                                   -0.110633      0.191622    
         4       3  0.5236  1.0472  0.135497       0.00000    
                                    0.135497      0.103752E-15
         5       5  0.2618  0.6283  0.539042E-03   0.00000    
                                    0.539042E-03 -0.660136E-19
         5       4  0.2618  0.6283 -0.514669E-02  0.373929E-02
                                   -0.514669E-02  0.373929E-02
         5       3  0.2618  0.6283  0.137100E-01 -0.421952E-01
                                    0.137100E-01 -0.421952E-01
         5       2  0.2618  0.6283  0.609635E-01  0.187626    
                                    0.609635E-01  0.187626    
         5       1  0.2618  0.6283 -0.417040     -0.302997    
                                   -0.417040     -0.302997    
         4       2  0.6283  0.7854   0.00000      0.413939    
                                    0.253464E-16  0.413939    
         4       2  1.8850  0.7854   0.00000     -0.100323    
                                   -0.614301E-17 -0.100323    
         4       2  3.1416  0.7854   0.00000       0.00000    
                                     0.00000       0.00000    
         4       2  4.3982  0.7854   0.00000     -0.100323    
                                   -0.614301E-17 -0.100323    
         4       2  5.6549  0.7854   0.00000      0.413939    
                                    0.253464E-16  0.413939    
         3      -1  0.3927  0.4488  0.364121     -0.175351    
                                    0.364121     -0.175351    
         3      -1  0.3927  0.8976  0.251979     -0.315972    
                                    0.251979     -0.315972    
         3      -1  0.3927  1.3464  0.899304E-01 -0.394011    
                                    0.899304E-01 -0.394011    
         3      -1  0.3927  1.7952 -0.899304E-01 -0.394011    
                                   -0.899304E-01 -0.394011    
         3      -1  0.3927  2.2440 -0.251979     -0.315972    
                                   -0.251979     -0.315972    
 
STIRLING1_TEST
  STIRLING1: Stirling numbers of first kind.
  Get rows 1 through        8
 
         1       1       0       0       0       0       0       0       0
         2      -1       1       0       0       0       0       0       0
         3       2      -3       1       0       0       0       0       0
         4      -6      11      -6       1       0       0       0       0
         5      24     -50      35     -10       1       0       0       0
         6    -120     274    -225      85     -15       1       0       0
         7     720   -1764    1624    -735     175     -21       1       0
         8   -5040   13068  -13132    6769   -1960     322     -28       1
 
STIRLING2_TEST
  STIRLING2: Stirling numbers of second kind.
  Get rows 1 through    8
 
         1       1       0       0       0       0       0       0       0
         2       1       1       0       0       0       0       0       0
         3       1       3       1       0       0       0       0       0
         4       1       7       6       1       0       0       0       0
         5       1      15      25      10       1       0       0       0
         6       1      31      90      65      15       1       0       0
         7       1      63     301     350     140      21       1       0
         8       1     127     966    1701    1050     266      28       1
 
TAU_TEST
  TAU computes the Tau function.
 
         N  exact C(I)  computed C(I)
 
         1           1           1
         2           2           2
         3           2           2
         4           3           3
         5           2           2
         6           4           4
         7           2           2
         8           4           4
         9           3           3
        10           4           4
        23           2           2
        72          12          12
       126          12          12
       226           4           4
       300          18          18
       480          24          24
       521           2           2
       610           8           8
       832          14          14
       960          28          28
 
TETRAHEDRON_NUM_TEST
  TETRAHEDRON_NUM computes the tetrahedron numbers.
 
         I    TETR(I)
 
         1         1
         2         4
         3        10
         4        20
         5        35
         6        56
         7        84
         8       120
         9       165
        10       220
 
TRIANGLE_NUM_TEST
  TRIANGLE_NUM computes the triangular numbers.
 
         I    TRI(I)
 
         1         1
         2         3
         3         6
         4        10
         5        15
         6        21
         7        28
         8        36
         9        45
        10        55
 
TRIANGLE_LOWER_TO_I4_TEST
  TRIANGLE_LOWER_TO_I4 converts a lower triangular index
  to a linear one.
 
     I, J ==> K
 
     1   1       1
     2   1       2
     2   2       3
     3   1       4
     3   2       5
     3   3       6
     4   1       7
     4   2       8
     4   3       9
     4   4      10

tribonacci_direct_test():
  tribonacci_direct() computes the Tribonacci sequence.

     1         1
     2         1
     3         2
     4         4
     5         7
     6        13
     7        24
     8        44
     9        81
    10       149
    11       274
    12       504
    13       927
    14      1705
    15      3136
    16      5768
    17     10609
    18     19513
    19     35890
    20     66012
 
tribonacci_recursive_test():
  tribonacci_recursive() computes the Tribonacci sequence.
 
       N       F(N)
 
        -1         0
         0         0
         1         1
         2         1
         3         2
         4         4
         5         7
         6        13
         7        24
         8        44
         9        81
        10       149
        11       274
        12       504
        13       927
        14      1705
        15      3136
        16      5768
        17     10609
        18     19513
        19     35890
        20     66012

tribonacci_roots_test():
  tribonacci_roots() computes the Tribonacci roots.

  alpha =    1.83929    , p(alpha) =  -0.133227E-14
  beta =  -0.419643      0.606291    , p(beta) =  -0.666134E-15 -0.111022E-15
  gamma =  -0.419643     -0.606291    , p(gamma) =  -0.666134E-15  0.111022E-15
 
TRINOMIAL_TEST
  TRINOMIAL evaluates the trinomial coefficient:

  T(I,J,K) = (I+J+K)! / I! / J! / K!
 
     I     J     K    T(I,J,K)
 
     0     0     0         1
     1     0     0         1
     2     0     0         1
     3     0     0         1
     4     0     0         1
     0     1     0         1
     1     1     0         2
     2     1     0         3
     3     1     0         4
     4     1     0         5
     0     2     0         1
     1     2     0         3
     2     2     0         6
     3     2     0        10
     4     2     0        15
     0     3     0         1
     1     3     0         4
     2     3     0        10
     3     3     0        20
     4     3     0        35
     0     4     0         1
     1     4     0         5
     2     4     0        15
     3     4     0        35
     4     4     0        70
     0     0     1         1
     1     0     1         2
     2     0     1         3
     3     0     1         4
     4     0     1         5
     0     1     1         2
     1     1     1         6
     2     1     1        12
     3     1     1        20
     4     1     1        30
     0     2     1         3
     1     2     1        12
     2     2     1        30
     3     2     1        60
     4     2     1       105
     0     3     1         4
     1     3     1        20
     2     3     1        60
     3     3     1       140
     4     3     1       280
     0     4     1         5
     1     4     1        30
     2     4     1       105
     3     4     1       280
     4     4     1       630
     0     0     2         1
     1     0     2         3
     2     0     2         6
     3     0     2        10
     4     0     2        15
     0     1     2         3
     1     1     2        12
     2     1     2        30
     3     1     2        60
     4     1     2       105
     0     2     2         6
     1     2     2        30
     2     2     2        90
     3     2     2       210
     4     2     2       420
     0     3     2        10
     1     3     2        60
     2     3     2       210
     3     3     2       560
     4     3     2      1260
     0     4     2        15
     1     4     2       105
     2     4     2       420
     3     4     2      1260
     4     4     2      3150
     0     0     3         1
     1     0     3         4
     2     0     3        10
     3     0     3        20
     4     0     3        35
     0     1     3         4
     1     1     3        20
     2     1     3        60
     3     1     3       140
     4     1     3       280
     0     2     3        10
     1     2     3        60
     2     2     3       210
     3     2     3       560
     4     2     3      1260
     0     3     3        20
     1     3     3       140
     2     3     3       560
     3     3     3      1680
     4     3     3      4200
     0     4     3        35
     1     4     3       280
     2     4     3      1260
     3     4     3      4200
     4     4     3     11550
     0     0     4         1
     1     0     4         5
     2     0     4        15
     3     0     4        35
     4     0     4        70
     0     1     4         5
     1     1     4        30
     2     1     4       105
     3     1     4       280
     4     1     4       630
     0     2     4        15
     1     2     4       105
     2     2     4       420
     3     2     4      1260
     4     2     4      3150
     0     3     4        35
     1     3     4       280
     2     3     4      1260
     3     3     4      4200
     4     3     4     11550
     0     4     4        70
     1     4     4       630
     2     4     4      3150
     3     4     4     11550
     4     4     4     34650
 
V_HOFSTADTER_TEST
  V_HOFSTADTER evaluates Hofstadter's recursive
  V function.
 
       N   V(N)
 
         0         0
         1         1
         2         1
         3         1
         4         1
         5         2
         6         3
         7         4
         8         5
         9         5
        10         6
        11         6
        12         7
        13         8
        14         8
        15         9
        16         9
        17        10
        18        11
        19        11
        20        11
        21        12
        22        12
        23        13
        24        14
        25        14
        26        15
        27        15
        28        16
        29        17
        30        17
 
VIBONACCI_TEST
  VIBONACCI computes a Vibonacci sequence.
 
  Number of times we compute the series:        3
 
         1         1       1       1
         2         1       1       1
         3         0       0      -2
         4         1      -1       1
         5        -1      -1      -1
         6         0       0      -2
         7        -1      -1      -3
         8         1       1       1
         9        -2       0      -2
        10        -3       1      -3
        11        -1      -1       5
        12         4      -2       2
        13         3      -3      -7
        14        -7      -1      -5
        15        10      -4       2
        16        -3       3       7
        17       -13       1       9
        18       -16       2      -2
        19        -3      -3     -11
        20       -19       1      -9
 
ZECKENDORF_TEST
  ZECKENDORF computes the Zeckendorf decomposition of
  an integer N into nonconsecutive Fibonacci numbers.
 
         N Sum M Parts
 
         1     1
         2     2
         3     3
         4     3   1
         5     5
         6     5   1
         7     5   2
         8     8
         9     8   1
        10     8   2
        11     8   3
        12     8   3   1
        13    13
        14    13   1
        15    13   2
        16    13   3
        17    13   3   1
        18    13   5
        19    13   5   1
        20    13   5   2
        21    21
        22    21   1
        23    21   2
        24    21   3
        25    21   3   1
        26    21   5
        27    21   5   1
        28    21   5   2
        29    21   8
        30    21   8   1
        31    21   8   2
        32    21   8   3
        33    21   8   3   1
        34    34
        35    34   1
        36    34   2
        37    34   3
        38    34   3   1
        39    34   5
        40    34   5   1
        41    34   5   2
        42    34   8
        43    34   8   1
        44    34   8   2
        45    34   8   3
        46    34   8   3   1
        47    34  13
        48    34  13   1
        49    34  13   2
        50    34  13   3
        51    34  13   3   1
        52    34  13   5
        53    34  13   5   1
        54    34  13   5   2
        55    55
        56    55   1
        57    55   2
        58    55   3
        59    55   3   1
        60    55   5
        61    55   5   1
        62    55   5   2
        63    55   8
        64    55   8   1
        65    55   8   2
        66    55   8   3
        67    55   8   3   1
        68    55  13
        69    55  13   1
        70    55  13   2
        71    55  13   3
        72    55  13   3   1
        73    55  13   5
        74    55  13   5   1
        75    55  13   5   2
        76    55  21
        77    55  21   1
        78    55  21   2
        79    55  21   3
        80    55  21   3   1
        81    55  21   5
        82    55  21   5   1
        83    55  21   5   2
        84    55  21   8
        85    55  21   8   1
        86    55  21   8   2
        87    55  21   8   3
        88    55  21   8   3   1
        89    89
        90    89   1
        91    89   2
        92    89   3
        93    89   3   1
        94    89   5
        95    89   5   1
        96    89   5   2
        97    89   8
        98    89   8   1
        99    89   8   2
       100    89   8   3
 
ZERNIKE_POLY_TEST
  ZERNIKE_POLY evaluates a Zernike polynomial directly.
 
  Z1: Compute polynomial coefficients,
  then evaluate by Horner's method;
  Z2: Evaluate directly by recursion.
 
   N   M       Z1              Z2
 
 
   0   0     1.0000000         1.0000000    
 
   1   0     0.0000000         0.0000000    
   1   1    0.98765432        0.98765432    
 
   2   0    0.95092212        0.95092212    
   2   1     0.0000000         0.0000000    
   2   2    0.97546106        0.97546106    
 
   3   0     0.0000000         0.0000000    
   3   1    0.91494634        0.91494634    
   3   2     0.0000000         0.0000000    
   3   3    0.96341833        0.96341833    
 
   4   0    0.85637930        0.85637930    
   4   1     0.0000000         0.0000000    
   4   2    0.87971393        0.87971393    
   4   3     0.0000000         0.0000000    
   4   4    0.95152428        0.95152428    
 
   5   0     0.0000000         0.0000000    
   5   1    0.79971364        0.79971364    
   5   2     0.0000000         0.0000000    
   5   3    0.84521200        0.84521200    
   5   4     0.0000000         0.0000000    
   5   5    0.93977706        0.93977706    
 
ZERNIKE_POLY_COEF_TEST
  ZERNIKE_POLY_COEF determines the Zernike
  polynomial coefficients.
 
  Zernike polynomial
 
  p(x) =     0.00000    
 
  Zernike polynomial
 
  p(x) =     10.0000     * x ^   5
         -   12.0000     * x ^   3
         +   3.00000     * x
 
  Zernike polynomial
 
  p(x) =     0.00000    
 
  Zernike polynomial
 
  p(x) =     5.00000     * x ^   5
         -   4.00000     * x ^   3
 
  Zernike polynomial
 
  p(x) =     0.00000    
 
  Zernike polynomial
 
  p(x) =     1.00000     * x ^   5
 
ZETA_M1_TEST
  ZETA_M1 computes the Zeta Minus One function.
  Requested tolerance =   0.100000E-09
 
       N    exact Zeta    computed Zeta
 
      2.00    0.644934066848        0.644934066822    
      2.50    0.341487257300        0.341487257233    
      3.00    0.202056903160        0.202056903140    
      3.50    0.126733867300        0.126733867303    
      4.00    0.823232337111E-01    0.823232337005E-01
      5.00    0.369277551434E-01    0.369277551398E-01
      6.00    0.173430619844E-01    0.173430619810E-01
      7.00    0.834927738192E-02    0.834927738016E-02
      8.00    0.407735619794E-02    0.407735619764E-02
      9.00    0.200839292608E-02    0.200839282603E-02
     10.00    0.994575127818E-03    0.994575127811E-03
     11.00    0.494188604119E-03    0.494188604118E-03
     12.00    0.246086553308E-03    0.246086553308E-03
     16.00    0.152822594087E-04    0.152822594087E-04
     20.00    0.953962033873E-06    0.953962033873E-06
     30.00    0.931327432420E-10    0.931327432420E-09
     40.00    0.909494780000E-12    0.909494784026E-12
 
ZETA_NAIVE_TEST
  ZETA_NAIVE computes the Zeta function.
 
       N    exact Zeta    computed Zeta
 
         2     1.64493406685         1.64393456668    
         3     1.20205690316         1.20205640366    
         4     1.08232323371         1.08232323338    
         5     1.03692775514         1.03692775514    
         6     1.01734306198         1.01734306198    
         7     1.00834927738         1.00834927738    
         8     1.00407735620         1.00407735620    
         9     1.00200839293         1.00200839283    
        10     1.00099457513         1.00099457513    
        11     1.00049418860         1.00049418860    
        12     1.00024608655         1.00024608655    
        16     1.00001528226         1.00001528226    
        20     1.00000095396         1.00000095396    
        30     1.00000000093         1.00000000093    
        40     1.00000000000         1.00000000000    
 
polpak_test():
  Normal end of execution.
 
12 May 2021   8:26:55.593 AM
