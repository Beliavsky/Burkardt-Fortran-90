11 September 2020   9:27:48.617 PM
 
WAVELET_TEST:
  FORTRAN90 version
  Test the WAVELET library.
 
TEST01
  DAUB2_TRANSFORM computes the DAUB2 transform of a vector.
  DAUB2_TRANSFORM_INVERSE inverts it.
 
   i      U          D2(U)    D2inv(D2(U))
 
   1      0.2184      1.6398      0.2184
   2      0.9563      0.0677      0.9563
   3      0.8295      0.6070      0.8295
   4      0.5617     -0.2708      0.5617
   5      0.4153     -0.1082      0.4153
   6      0.0661      0.0569      0.0661
   7      0.2576      0.0833      0.2576
   8      0.1100      0.1784      0.1100
   9      0.0438     -0.5218      0.0438
  10      0.6340      0.1894      0.6340
  11      0.0617      0.2469      0.0617
  12      0.4495      0.1044      0.4495
  13      0.4013     -0.4173      0.4013
  14      0.7547     -0.2742      0.7547
  15      0.7973     -0.2499      0.7973
  16      0.0018      0.5625      0.0018
 
   i      U          D2(U)    D2inv(D2(U))
 
   1      1.0000      2.8284      1.0000
   2      1.0000      0.0000      1.0000
   3      1.0000      0.0000      1.0000
   4      1.0000      0.0000      1.0000
   5      1.0000      0.0000      1.0000
   6      1.0000      0.0000      1.0000
   7      1.0000      0.0000      1.0000
   8      1.0000      0.0000      1.0000
 
   i      U          D2(U)    D2inv(D2(U))
 
   1      1.0000     34.0000      1.0000
   2      2.0000    -16.0000      2.0000
   3      3.0000     -5.6569      3.0000
   4      4.0000     -5.6569      4.0000
   5      5.0000     -2.0000      5.0000
   6      6.0000     -2.0000      6.0000
   7      7.0000     -2.0000      7.0000
   8      8.0000     -2.0000      8.0000
   9      9.0000     -0.7071      9.0000
  10     10.0000     -0.7071     10.0000
  11     11.0000     -0.7071     11.0000
  12     12.0000     -0.7071     12.0000
  13     13.0000     -0.7071     13.0000
  14     14.0000     -0.7071     14.0000
  15     15.0000     -0.7071     15.0000
  16     16.0000     -0.7071     16.0000
 
   i      U          D2(U)    D2inv(D2(U))
 
   1     25.0000     21.2132     25.0000
   2     16.0000     16.9706     16.0000
   3      9.0000     14.0000      9.0000
   4      4.0000     -2.0000      4.0000
   5      1.0000      6.3640      1.0000
   6      0.0000      3.5355     -0.0000
   7      1.0000      0.7071      1.0000
   8      4.0000     -2.1213      4.0000
 
TEST02
  DAUB4_TRANSFORM computes the DAUB4 transform of a vector.
  DAUB4_TRANSFORM_INVERSE inverts it.
 
   i      U          D4(U)    D4inv(D4(U))
 
   1      0.2184      0.9816      0.2184
   2      0.9563      1.3374      0.9563
   3      0.8295     -0.0194      0.8295
   4      0.5617      0.6730      0.5617
   5      0.4153     -0.1651      0.4153
   6      0.0661      0.1609      0.0661
   7      0.2576      0.5341      0.2576
   8      0.1100      0.1912      0.1100
   9      0.0438      0.1800      0.0438
  10      0.6340      0.0822      0.6340
  11      0.0617      0.0938      0.0617
  12      0.4495     -0.3275      0.4495
  13      0.4013     -0.3132      0.4013
  14      0.7547     -0.1375      0.7547
  15      0.7973      0.4450      0.7973
  16      0.0018     -0.3827      0.0018
 
   i      U          D4(U)    D4inv(D4(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000      0.0000      1.0000
   4      1.0000      0.0000      1.0000
   5      1.0000      0.0000      1.0000
   6      1.0000      0.0000      1.0000
   7      1.0000      0.0000      1.0000
   8      1.0000      0.0000      1.0000
 
   i      U          D4(U)    D4inv(D4(U))
 
   1      1.0000     15.8659      1.0000
   2      2.0000     32.2173      2.0000
   3      3.0000      1.8117      3.0000
   4      4.0000    -10.5744      4.0000
   5      5.0000      0.0000      5.0000
   6      6.0000      0.0000      6.0000
   7      7.0000      0.7321      7.0000
   8      8.0000     -7.6603      8.0000
   9      9.0000      0.0000      9.0000
  10     10.0000      0.0000     10.0000
  11     11.0000      0.0000     11.0000
  12     12.0000      0.0000     12.0000
  13     13.0000      0.0000     13.0000
  14     14.0000      0.0000     14.0000
  15     15.0000      0.0000     15.0000
  16     16.0000     -5.6569     16.0000
 
   i      U          D4(U)    D4inv(D4(U))
 
   1     25.0000     18.7321     25.0000
   2     16.0000     11.2679     16.0000
   3      9.0000     -8.6603      9.0000
   4      4.0000     17.0526      4.0000
   5      1.0000     -1.2247      1.0000
   6      0.0000     -1.2247      0.0000
   7      1.0000     -1.2247      1.0000
   8      4.0000     12.1595      4.0000
 
TEST03
  DAUB6_TRANSFORM computes the DAUB6 transform of a vector.
  DAUB6_TRANSFORM_INVERSE inverts it.
 
   i      U          D6(U)    D6inv(D6(U))
 
   1      0.2184      0.8295      0.2184
   2      0.9563      1.4895      0.9563
   3      0.8295      0.4004      0.8295
   4      0.5617      0.2550      0.5617
   5      0.4153      0.2782      0.4153
   6      0.0661      0.6173      0.0661
   7      0.2576      0.4174      0.2576
   8      0.1100     -0.2926      0.1100
   9      0.0438      0.0322      0.0438
  10      0.6340      0.1620      0.6340
  11      0.0617     -0.2406      0.0617
  12      0.4495     -0.3787      0.4495
  13      0.4013     -0.0866      0.4013
  14      0.7547      0.2821      0.7547
  15      0.7973     -0.1718      0.7973
  16      0.0018      0.0414      0.0018
 
   i      U          D6(U)    D6inv(D6(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000      0.0000      1.0000
   4      1.0000      0.0000      1.0000
   5      1.0000      0.0000      1.0000
   6      1.0000      0.0000      1.0000
   7      1.0000      0.0000      1.0000
   8      1.0000      0.0000      1.0000
 
   i      U          D6(U)    D6inv(D6(U))
 
   1      1.0000     22.6778      1.0000
   2      2.0000     25.4054      2.0000
   3      3.0000    -11.0375      3.0000
   4      4.0000      8.0787      4.0000
   5      5.0000      0.0000      5.0000
   6      6.0000      2.1102      6.0000
   7      7.0000     -8.8180      7.0000
   8      8.0000      2.3832      8.0000
   9      9.0000      0.0000      9.0000
  10     10.0000      0.0000     10.0000
  11     11.0000      0.0000     11.0000
  12     12.0000      0.0000     12.0000
  13     13.0000      0.0000     13.0000
  14     14.0000      0.0000     14.0000
  15     15.0000     -7.5875     15.0000
  16     16.0000      1.9307     16.0000
 
   i      U          D6(U)    D6inv(D6(U))
 
   1     25.0000      9.5264     25.0000
   2     16.0000     20.4736     16.0000
   3      9.0000     13.7048      9.0000
   4      4.0000    -10.5832      4.0000
   5      1.0000      0.0000      1.0000
   6      0.0000      0.0000      0.0000
   7      1.0000     12.9103      1.0000
   8      4.0000     -4.4250      4.0000
 
TEST04
  DAUB8_TRANSFORM computes the DAUB8 transform of a vector.
  DAUB8_TRANSFORM_INVERSE inverts it.
 
   i      U          D8(U)    D8inv(D8(U))
 
   1      0.2184      0.8358      0.2184
   2      0.9563      1.4832      0.9563
   3      0.8295      0.4238      0.8295
   4      0.5617     -0.0088      0.5617
   5      0.4153      0.5036      0.4153
   6      0.0661      0.5974      0.0661
   7      0.2576     -0.3040      0.2576
   8      0.1100      0.2978      0.1100
   9      0.0438      0.2023      0.0438
  10      0.6340     -0.1934      0.6340
  11      0.0617     -0.4387      0.0617
  12      0.4495     -0.0587      0.4495
  13      0.4013      0.1468      0.4013
  14      0.7547      0.0504      0.7547
  15      0.7973     -0.1500      0.7973
  16      0.0018      0.0812      0.0018
 
   i      U          D8(U)    D8inv(D8(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000      0.0000      1.0000
   4      1.0000      0.0000      1.0000
   5      1.0000      0.0000      1.0000
   6      1.0000      0.0000      1.0000
   7      1.0000      0.0000      1.0000
   8      1.0000      0.0000      1.0000
 
   i      U          D8(U)    D8inv(D8(U))
 
   1      1.0000     29.6611      1.0000
   2      2.0000     18.4222      2.0000
   3      3.0000     10.2278      3.0000
   4      4.0000     -6.6350      4.0000
   5      5.0000      3.4852      5.0000
   6      6.0000     -6.3549      6.0000
   7      7.0000      2.6205      7.0000
   8      8.0000     -0.6777      8.0000
   9      9.0000      0.0000      9.0000
  10     10.0000      0.0000     10.0000
  11     11.0000      0.0000     11.0000
  12     12.0000      0.0000     12.0000
  13     13.0000      0.0000     13.0000
  14     14.0000     -7.7515     14.0000
  15     15.0000      2.7903     15.0000
  16     16.0000     -0.6957     16.0000
 
   i      U          D8(U)    D8inv(D8(U))
 
   1     25.0000      2.8040     25.0000
   2     16.0000     27.1960     16.0000
   3      9.0000     -8.0573      9.0000
   4      4.0000      5.4746      4.0000
   5      1.0000      0.0000      1.0000
   6      0.0000     11.4375     -0.0000
   7      1.0000     -4.5132      1.0000
   8      4.0000      1.5609      4.0000
 
TEST05
  DAUB10_TRANSFORM computes the DAUB10 transform of a vector.
  DAUB10_TRANSFORM_INVERSE inverts it.
 
   i      U         D10(U)   D10inv(D10(U))
 
   1      0.2184      1.0011      0.2184
   2      0.9563      1.3179      0.9563
   3      0.8295     -0.3729      0.8295
   4      0.5617      0.4200      0.5617
   5      0.4153      0.6958      0.4153
   6      0.0661     -0.2344      0.0661
   7      0.2576      0.1873      0.2576
   8      0.1100      0.3044      0.1100
   9      0.0438     -0.1524      0.0438
  10      0.6340     -0.4674      0.6340
  11      0.0617     -0.0513      0.0617
  12      0.4495      0.0498      0.4495
  13      0.4013      0.2306      0.4013
  14      0.7547     -0.3319      0.7547
  15      0.7973      0.1786      0.7973
  16      0.0018      0.1840      0.0018
 
   i      U         D10(U)   D10inv(D10(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000     -0.0000      1.0000
   4      1.0000     -0.0000      1.0000
   5      1.0000     -0.0000      1.0000
   6      1.0000     -0.0000      1.0000
   7      1.0000     -0.0000      1.0000
   8      1.0000     -0.0000      1.0000
 
   i      U         D10(U)   D10inv(D10(U))
 
   1      1.0000     33.9013      1.0000
   2      2.0000     14.1820      2.0000
   3      3.0000      0.8949      3.0000
   4      4.0000      7.7442      4.0000
   5      5.0000     -2.2792      5.0000
   6      6.0000      0.6621      6.0000
   7      7.0000     -0.5141      7.0000
   8      8.0000      4.6989      8.0000
   9      9.0000      0.0000      9.0000
  10     10.0000     -0.0000     10.0000
  11     11.0000     -0.0000     11.0000
  12     12.0000     -0.0000     12.0000
  13     13.0000     -7.0996     13.0000
  14     14.0000      2.2745     14.0000
  15     15.0000     -1.0863     15.0000
  16     16.0000      0.2547     16.0000
 
   i      U         D10(U)   D10inv(D10(U))
 
   1     25.0000      0.6414     25.0000
   2     16.0000     29.3586     16.0000
   3      9.0000     -4.9374      9.0000
   4      4.0000     -2.7026      4.0000
   5      1.0000      9.6613      1.0000
   6      0.0000     -2.3231     -0.0000
   7      1.0000      1.7099      1.0000
   8      4.0000     -0.5627      4.0000
 
TEST06
  DAUB12_TRANSFORM computes the DAUB12 transform of a vector.
  DAUB12_TRANSFORM_INVERSE inverts it.
 
   i      U         D12(U)   D12inv(D12(U))
 
   1      0.2184      1.2492      0.2184
   2      0.9563      1.0698      0.9563
   3      0.8295      0.2469      0.8295
   4      0.5617     -0.5619      0.5617
   5      0.4153     -0.1146      0.4153
   6      0.0661     -0.0118      0.0661
   7      0.2576      0.0983      0.2576
   8      0.1100      0.6627      0.1100
   9      0.0438     -0.4722      0.0438
  10      0.6340     -0.0710      0.6340
  11      0.0617     -0.0102      0.0617
  12      0.4495      0.3471      0.4495
  13      0.4013     -0.4562      0.4013
  14      0.7547      0.2693      0.7547
  15      0.7973      0.1251      0.7973
  16      0.0018     -0.0918      0.0018
 
   i      U         D12(U)   D12inv(D12(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000     -0.0000      1.0000
   4      1.0000     -0.0000      1.0000
   5      1.0000     -0.0000      1.0000
   6      1.0000     -0.0000      1.0000
   7      1.0000     -0.0000      1.0000
   8      1.0000     -0.0000      1.0000
 
   i      U         D12(U)   D12inv(D12(U))
 
   1      1.0000     33.8275      1.0000
   2      2.0000     14.2558      2.0000
   3      3.0000      2.1504      3.0000
   4      4.0000      8.4620      4.0000
   5      5.0000     -2.0978      5.0000
   6      6.0000      0.7718      6.0000
   7      7.0000      4.9808      7.0000
   8      8.0000      1.8663      8.0000
   9      9.0000      0.0000      9.0000
  10     10.0000      0.0000     10.0000
  11     11.0000     -0.0000     11.0000
  12     12.0000     -6.1293     12.0000
  13     13.0000      0.8448     13.0000
  14     14.0000     -0.6992     14.0000
  15     15.0000      0.4205     15.0000
  16     16.0000     -0.0937     16.0000
 
   i      U         D12(U)   D12inv(D12(U))
 
   1     25.0000      3.4826     25.0000
   2     16.0000     26.5174     16.0000
   3      9.0000      3.1103      9.0000
   4      4.0000    -14.2867      4.0000
   5      1.0000      0.6993      1.0000
   6      0.0000      0.3127     -0.0000
   7      1.0000     -0.6453      1.0000
   8      4.0000      8.1186      4.0000
 
TEST07
  DAUB14_TRANSFORM computes the DAUB14 transform of a vector.
  DAUB14_TRANSFORM_INVERSE inverts it.
 
   i      U         D14(U)   D14inv(D14(U))
 
   1      0.2184      1.4669      0.2184
   2      0.9563      0.8521      0.9563
   3      0.8295     -0.5249      0.8295
   4      0.5617     -0.0295      0.5617
   5      0.4153     -0.2333      0.4153
   6      0.0661     -0.0830      0.0661
   7      0.2576      0.4851      0.2576
   8      0.1100      0.0354      0.1100
   9      0.0438     -0.1133      0.0438
  10      0.6340     -0.0360      0.6340
  11      0.0617      0.3994      0.0617
  12      0.4495     -0.5009      0.4495
  13      0.4013      0.3101      0.4013
  14      0.7547      0.0633      0.7547
  15      0.7973     -0.0133      0.7973
  16      0.0018     -0.4693      0.0018
 
   i      U         D14(U)   D14inv(D14(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000     -0.0000      1.0000
   4      1.0000     -0.0000      1.0000
   5      1.0000      0.0000      1.0000
   6      1.0000      0.0000      1.0000
   7      1.0000      0.0000      1.0000
   8      1.0000      0.0000      1.0000
 
   i      U         D14(U)   D14inv(D14(U))
 
   1      1.0000     29.6608      1.0000
   2      2.0000     18.4225      2.0000
   3      3.0000     12.9282      3.0000
   4      4.0000     -3.9207      4.0000
   5      5.0000      2.3559      5.0000
   6      6.0000      4.0176      6.0000
   7      7.0000      5.2726      7.0000
   8      8.0000     -4.2163      8.0000
   9      9.0000      0.0000      9.0000
  10     10.0000      0.0000     10.0000
  11     11.0000     -5.0990     11.0000
  12     12.0000     -0.9494     12.0000
  13     13.0000      0.3327     13.0000
  14     14.0000      0.1838     14.0000
  15     15.0000     -0.1595     15.0000
  16     16.0000      0.0345     16.0000
 
   i      U         D14(U)   D14inv(D14(U))
 
   1     25.0000     10.1637     25.0000
   2     16.0000     19.8363     16.0000
   3      9.0000    -19.7295      9.0000
   4      4.0000      7.1017      4.0000
   5      1.0000     -1.8202      1.0000
   6      0.0000      0.1349      0.0000
   7      1.0000      6.5820      1.0000
   8      4.0000      3.5885      4.0000
 
TEST08
  DAUB16_TRANSFORM computes the DAUB16 transform of a vector.
  DAUB16_TRANSFORM_INVERSE inverts it.
 
   i      U         D16(U)   D16inv(D16(U))
 
   1      0.2184      1.5573      0.2184
   2      0.9563      0.7617      0.9563
   3      0.8295     -0.3050      0.8295
   4      0.5617     -0.2957      0.5617
   5      0.4153     -0.2346      0.4153
   6      0.0661      0.2021      0.0661
   7      0.2576      0.1910      0.2576
   8      0.1100     -0.4173      0.1100
   9      0.0438     -0.0357      0.0438
  10      0.6340      0.3969      0.6340
  11      0.0617     -0.4675      0.0617
  12      0.4495      0.2808      0.4495
  13      0.4013      0.0336      0.4013
  14      0.7547      0.0625      0.7547
  15      0.7973     -0.4649      0.7973
  16      0.0018     -0.1657      0.0018
 
   i      U         D16(U)   D16inv(D16(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000     -0.0000      1.0000
   4      1.0000     -0.0000      1.0000
   5      1.0000     -0.0000      1.0000
   6      1.0000     -0.0000      1.0000
   7      1.0000     -0.0000      1.0000
   8      1.0000     -0.0000      1.0000
 
   i      U         D16(U)   D16inv(D16(U))
 
   1      1.0000     23.2267      1.0000
   2      2.0000     24.8566      2.0000
   3      3.0000     -7.9222      3.0000
   4      4.0000     12.3873      4.0000
   5      5.0000      2.2335      5.0000
   6      6.0000      7.4874      6.0000
   7      7.0000     -4.9149      7.0000
   8      8.0000      3.1858      8.0000
   9      9.0000     -0.0000      9.0000
  10     10.0000     -4.1353     10.0000
  11     11.0000     -2.6909     11.0000
  12     12.0000      1.6001     12.0000
  13     13.0000     -0.4523     13.0000
  14     14.0000     -0.0248     14.0000
  15     15.0000      0.0590     15.0000
  16     16.0000     -0.0127     16.0000
 
   i      U         D16(U)   D16inv(D16(U))
 
   1     25.0000     18.3697     25.0000
   2     16.0000     11.6303     16.0000
   3      9.0000      7.8364      9.0000
   4      4.0000    -19.6433      4.0000
   5      1.0000      1.4352      1.0000
   6      0.0000      4.8312     -0.0000
   7      1.0000      6.0166      1.0000
   8      4.0000     -3.7977      4.0000
 
TEST09
  DAUB18_TRANSFORM computes the DAUB18 transform of a vector.
  DAUB18_TRANSFORM_INVERSE inverts it.
 
   i      U         D18(U)   D18inv(D18(U))
 
   1      0.2184      1.4813      0.2184
   2      0.9563      0.8377      0.9563
   3      0.8295      0.0264      0.8295
   4      0.5617     -0.4738      0.5617
   5      0.4153     -0.1135      0.4153
   6      0.0661      0.3153      0.0661
   7      0.2576     -0.5192      0.2576
   8      0.1100     -0.3556      0.1100
   9      0.0438      0.3555      0.0438
  10      0.6340     -0.3729      0.6340
  11      0.0617      0.1851      0.0617
  12      0.4495      0.0541      0.4495
  13      0.4013      0.1112      0.4013
  14      0.7547     -0.4521      0.7547
  15      0.7973     -0.2183      0.7973
  16      0.0018     -0.0225      0.0018
 
   i      U         D18(U)   D18inv(D18(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000     -0.0000      1.0000
   4      1.0000     -0.0000      1.0000
   5      1.0000     -0.0000      1.0000
   6      1.0000     -0.0000      1.0000
   7      1.0000     -0.0000      1.0000
   8      1.0000     -0.0000      1.0000
 
   i      U         D18(U)   D18inv(D18(U))
 
   1      1.0000     17.1835      1.0000
   2      2.0000     30.8998      2.0000
   3      3.0000      6.9242      3.0000
   4      4.0000     -8.4011      4.0000
   5      5.0000      8.1545      5.0000
   6      6.0000     -4.0909      6.0000
   7      7.0000      2.6890      7.0000
   8      8.0000      0.3909      8.0000
   9      9.0000     -3.2921      9.0000
  10     10.0000     -4.1315     10.0000
  11     11.0000      2.6920     11.0000
  12     12.0000     -1.2341     12.0000
  13     13.0000      0.3396     13.0000
  14     14.0000     -0.0141     14.0000
  15     15.0000     -0.0212     15.0000
  16     16.0000      0.0047     16.0000
 
   i      U         D18(U)   D18inv(D18(U))
 
   1     25.0000     25.4016     25.0000
   2     16.0000      4.5984     16.0000
   3      9.0000    -14.0681      9.0000
   4      4.0000      5.1538      4.0000
   5      1.0000      2.9899      1.0000
   6      0.0000      7.9593     -0.0000
   7      1.0000     -5.0929      1.0000
   8      4.0000      2.6290      4.0000
 
TEST10
  DAUB20_TRANSFORM computes the DAUB20 transform of a vector.
  DAUB20_TRANSFORM_INVERSE inverts it.
 
   i      U         D20(U)   D20inv(D20(U))
 
   1      0.2184      1.2714      0.2184
   2      0.9563      1.0476      0.9563
   3      0.8295     -0.4671      0.8295
   4      0.5617      0.3169      0.5617
   5      0.4153      0.3699      0.4153
   6      0.0661     -0.5114      0.0661
   7      0.2576     -0.4403      0.2576
   8      0.1100     -0.3861      0.1100
   9      0.0438     -0.2418      0.0438
  10      0.6340      0.0437      0.6340
  11      0.0617      0.1220      0.0617
  12      0.4495      0.1189      0.4495
  13      0.4013     -0.4185      0.4013
  14      0.7547     -0.2694      0.7547
  15      0.7973     -0.0085      0.7973
  16      0.0018      0.2935      0.0018
 
   i      U         D20(U)   D20inv(D20(U))
 
   1      1.0000      2.0000      1.0000
   2      1.0000      2.0000      1.0000
   3      1.0000     -0.0000      1.0000
   4      1.0000     -0.0000      1.0000
   5      1.0000     -0.0000      1.0000
   6      1.0000     -0.0000      1.0000
   7      1.0000     -0.0000      1.0000
   8      1.0000     -0.0000      1.0000
 
   i      U         D20(U)   D20inv(D20(U))
 
   1      1.0000     13.9608      1.0000
   2      2.0000     34.1225      2.0000
   3      3.0000     -5.4653      3.0000
   4      4.0000     -1.4257      4.0000
   5      5.0000     -2.0651      5.0000
   6      6.0000      0.9615      6.0000
   7      7.0000     -0.9280      7.0000
   8      8.0000      7.0911      8.0000
   9      9.0000     -5.1642      9.0000
  10     10.0000      3.3321     10.0000
  11     11.0000     -1.8410     11.0000
  12     12.0000      0.7902     12.0000
  13     13.0000     -0.2125     13.0000
  14     14.0000      0.0170     14.0000
  15     15.0000      0.0074     15.0000
  16     16.0000     -2.5858     16.0000
 
   i      U         D20(U)   D20inv(D20(U))
 
   1     25.0000     29.0224     25.0000
   2     16.0000      0.9776     16.0000
   3      9.0000      0.1557      9.0000
   4      4.0000     -4.6465      4.0000
   5      1.0000      9.3796      1.0000
   6      0.0000     -5.5431     -0.0000
   7      1.0000      3.2247      1.0000
   8      4.0000      1.4242      4.0000
 
TEST11
  DAUB*_MATRIX computes the DAUB* matrix.
  Verify that each matrix is orthogonal.
 
  DAUB2,  N =   20  || A*A' - I|| =   0.993014E-15
  DAUB4,  N =   20  || A*A' - I|| =   0.526625E-15
  DAUB6,  N =   20  || A*A' - I|| =   0.102733E-14
  DAUB8,  N =   20  || A*A' - I|| =   0.216318E-14
  DAUB10, N =   20  || A*A' - I|| =   0.446043E-14
  DAUB12, N =   20  || A*A' - I|| =   0.887010E-14
 
TEST12
  DAUB*_SCALE uses recursion to estimate a scaling function.
 
   N        X       D2       D4       D6       D8      D10
 
     1   0.2184   1.0000   0.6830   0.4705   0.3258   0.2264
     2   0.2184   1.0000   0.4665   0.2213   0.1061   0.0513
     3   0.2184   1.0000   0.5519   0.2526   0.1073   0.0438
     4   0.2184   1.0000   0.5946   0.2683   0.1071   0.0397
     5   0.2184   1.0000   0.5576   0.2332   0.0849   0.0282
     6   0.2184   1.0000   0.5688   0.2373   0.0849   0.0274
 
     1   0.9563   1.0000   1.1830   1.1411   1.0109   0.8539
     2   0.9563   1.0000   1.2745   1.2123   1.0091   0.7735
     3   0.9563   1.0000   1.3203   1.2492   1.0084   0.7345
     4   0.9563   1.0000   1.3431   1.2677   1.0077   0.7152
     5   0.9563   1.0000   1.3233   1.2264   0.9528   0.6576
     6   0.9563   1.0000   1.3291   1.2310   0.9527   0.6531
 
     1   0.8295   1.0000   1.1830   1.1411   1.0109   0.8539
     2   0.8295   1.0000   1.2745   1.2123   1.0091   0.7735
     3   0.8295   1.0000   1.1953   1.0536   0.7998   0.5501
     4   0.8295   1.0000   1.2193   1.0720   0.7996   0.5341
     5   0.8295   1.0000   1.1985   1.0315   0.7502   0.4861
     6   0.8295   1.0000   1.2043   1.0358   0.7501   0.4824
 
     1   0.5617   1.0000   1.1830   1.1411   1.0109   0.8539
     2   0.5617   1.0000   1.0245   0.8428   0.6201   0.4253
     3   0.5617   1.0000   0.9559   0.7189   0.4678   0.2768
     4   0.5617   1.0000   0.9288   0.6613   0.3973   0.2137
     5   0.5617   1.0000   0.9338   0.6671   0.3970   0.2088
     6   0.5617   1.0000   0.9363   0.6700   0.3969   0.2065
 
     1   0.4153   1.0000   0.6830   0.4705   0.3258   0.2264
     2   0.4153   1.0000   0.8080   0.5369   0.3294   0.1933
     3   0.4153   1.0000   0.8705   0.5704   0.3288   0.1751
     4   0.4153   1.0000   0.8164   0.4957   0.2606   0.1246
     5   0.4153   1.0000   0.8328   0.5043   0.2605   0.1209
     6   0.4153   1.0000   0.8186   0.4853   0.2444   0.1101
 
WAVELET_TEST:
  Normal end of execution.
 
11 September 2020   9:27:48.648 PM
